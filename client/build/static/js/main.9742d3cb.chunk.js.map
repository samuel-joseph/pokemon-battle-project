{"version":3,"sources":["services/api_helper.js","components/Level.js","components/Evolution.js","components/Pokecenter.js","components/healthBar.js","components/maxHealthBar.js","components/Battle.js","components/Forest.js","components/RegisterForm.js","components/Pokedex.js","components/LoginForm.js","components/ChooseStarter.js","components/Trainer.js","components/Menu.js","components/StartGame.js","components/Outcome.js","components/League.js","components/Captured.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","loginUser","loginData","a","post","resp","localStorage","setItem","data","token","defaults","headers","common","authorization","console","log","user","username","trainername","id","registerUser","registerData","getChampion","get","newChampion","postData","put","verifyUser","getItem","getAllPokemon","pokemons","storePokemon","pokemon","trainerPokemon","getMoves","moves","ownedPokemon","addMoves","moveData","getPokemon","update","remove","delete","removeMove","pokemonId","moveId","useAdvantage","answer","use","i","length","j","type","typeAdvantage","push","k","move","Level","props","componentDidMount","state","Component","Evolution","withRouter","prevPokemon","saySomething","name","num","frontImage","match","map","Number","evolveId","evolvePokemon","health","current_health","backImage","fullyEvolved","del","testMoves","newMoves","passData","current_experience","setState","postMoveCopy","attack","animation","resp2","evolve","isClick","setTimeout","this","movesLoad","bind","index","splice","testMovesF","className","src","onClick","key","e","Pokecenter","heal","fullHp","isClicked","show","formData","HealthBar","percentage","style","width","MaxHealthBar","Battle","npc","pokemonID","userPokemon","fighterPokemon","npcAttack","userPokemonAttacks","total_experience","level","count","prevState","postMove","levelUp","evolution","userHealth","presetXP","gain","Math","floor","battleSequence","battle","levelUser","levelNpc","typeUser","typeNpc","npcHealth","randomNpcAttack","randomFunc","npcAdvantage","npcAnimation","randomUserAttack","userAdvantage","userAttack","userAnimation","effective","userTurn","npcTurn","setToTrue","catch","readyCatch","npcHp","totalNpcHp","hp","totalHp","chance","dice","random","history","change","fighterPokemonID","changedPokemon","arrayPostMoves","win","rip","to","Forest","resetMap","forestPokemons","arrayPokemons","rank","pop","shift","chosenPokemon","proceed","routeMaps","image","picked","RegisterForm","handleChange","target","value","password","errorText","onSubmit","handleRegister","htmlFor","onChange","LoginForm","handleLogin","ChooseStarter","starters","starterMoves","resp1","riolu","rioluMoves","chosenPokemonId","moveData1","moveData2","passMoves","savePokemon","ownPokemon","arrayMoveData","Trainer","showPokemon","isFree","regards","showMoves","class","Menu","champion","StartGame","Outcomes","League","currentTip","tips","gymLeader","eliteFour","gymLeaderCopy","JSON","parse","stringify","eliteFourCopy","array","userHealed","userMoves","ready","idChamp","newNpc","enemy","npcContainer","message","npcPokemon","npcMoves","currentNpc","isStart","finalMatch","introChamp","userWin","battleStart","champ","formerChamp","isChamp","firstPokemon","anotherTip","tip","Outcome","result","Captured","App","currentUser","preventDefault","regData","handleLogout","removeItem","handleMenu","turnOn","instruction","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister","error"],"mappings":"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","file":"static/js/main.9742d3cb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  // baseURL: \"http://localhost:3001\",\n  baseURL: \"https://mysterious-chamber-56831.herokuapp.com/\",\n});\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post(\"/users/login\", loginData);\n  localStorage.setItem(\"authToken\", resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  console.log(resp.data.token);\n  localStorage.setItem(\"name\", resp.data.user.username);\n  localStorage.setItem(\"trainername\", resp.data.trainername);\n  localStorage.setItem(\"id\", resp.data.user.id);\n  console.log(resp.data.user);\n  return resp.data.user;\n};\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post(\"/users/register\", registerData);\n  console.log(resp.data.token);\n  localStorage.setItem(\"authToken\", resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  localStorage.setItem(\"authToken\", resp.data.token);\n  localStorage.setItem(\"name\", resp.data.user.username);\n  // localStorage.setItem(\"trainername\", resp.data.user.trainername);\n  localStorage.setItem(\"id\", resp.data.user.id);\n  console.log(resp);\n  return resp.data.user;\n};\n\nexport const getChampion = async () => {\n  const resp = await api.get(\"/users/champion\");\n  return resp.data[0];\n};\n\nexport const newChampion = async (id, postData) => {\n  const resp = await api.put(`/users/${id}`, postData);\n  return;\n};\n\nexport const getAllTrainer = async () => {\n  const resp = await api.post(\"/users/all\");\n  return resp;\n};\n\nexport const verifyUser = () => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n  }\n};\n\nexport const userData = async () => {\n  const resp = await api.get(\"users/verify\");\n  console.log(resp);\n  return resp;\n};\n\nexport const getAllPokemon = async () => {\n  const resp = await api.get(\"/pokemons\");\n  return resp.data.pokemons;\n};\n\nexport const storePokemon = async (postData) => {\n  let pokemon = await api.post(\"/pokemons\", postData);\n  console.log(pokemon);\n  console.log(\"pokemon stored\");\n  return pokemon;\n};\n\nexport const trainerPokemon = async () => {\n  let resp = await api.get(\"pokemons/trainer\");\n  console.log(resp.data.pokemons);\n  return resp.data.pokemons;\n};\n\nexport const getMoves = async (id) => {\n  let resp = await api.get(`/pokemons/${id}/moves`);\n  console.log(resp);\n  return resp.data.moves;\n};\n\nexport const ownedPokemon = async (id) => {\n  let resp = await api.get(`/pokemons/trainer/${id}`);\n  return resp;\n};\n\nexport const addMoves = async (id, moveData) => {\n  let resp = await api.post(`/pokemons/${id}/moves`, moveData);\n  console.log(resp);\n  return resp;\n};\n\nexport const getPokemon = async (id) => {\n  const resp = await api.get(`/pokemons/${id}`);\n  return resp.data.pokemon;\n};\n\nexport const update = async (id, postData) => {\n  const resp = await api.put(`/pokemons/${id}`, postData);\n  return;\n};\n\nexport const remove = async (id) => {\n  const resp = await api.delete(`/pokemons/${id}`);\n  return;\n};\n\nexport const removeMove = async (pokemonId, moveId) => {\n  console.log(pokemonId);\n  console.log(moveId);\n  const resp = await api.delete(`/pokemons/${pokemonId}/moves/${moveId}`);\n  console.log(\"MOVE REMOVED\");\n  return;\n};\n\nexport const useAdvantage = (moves, pokemon) => {\n  let answer = [];\n  let use = [];\n  for (let i = 0; i < moves.length; i++) {\n    let j = moves[i].type;\n    let k = typeAdvantage(j, pokemon);\n\n    if (k === 2) answer.push(j);\n  }\n\n  if (answer.length === 0) {\n    for (let i = 0; i < moves.length; i++) {\n      let j = moves[i].type;\n      let k = typeAdvantage(j, pokemon);\n      console.log(k);\n\n      if (k === 1) answer.push(j);\n    }\n    if (answer.length === 0) return moves;\n  }\n  if (answer) {\n    for (let i = 0; i < moves.length; i++) {\n      for (let j = 0; j < answer.length; j++) {\n        if (moves[i].type === answer[j]) {\n          use.push(moves[i]);\n        }\n      }\n    }\n    return use;\n  } else return moves;\n};\n\nexport const typeAdvantage = (move, pokemon) => {\n  switch (move) {\n    case \"Dragon\":\n      switch (pokemon) {\n        case \"Dragon\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Ghost\":\n      switch (pokemon) {\n        case \"Normal\":\n          return 0;\n        case \"Psychic\":\n          return 0;\n        case \"Ghost\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Rock\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Ice\":\n          return 0.5;\n        case \"Fighting\":\n          return 0.5;\n        case \"Flying\":\n          return 2;\n        case \"Ground\":\n          return 0.5;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Bug\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Fighting\":\n          return 0.5;\n        case \"Poison\":\n          return 2;\n        case \"Flying\":\n          return 0.5;\n        case \"Psychic\":\n          return 2;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Psychic\":\n      switch (pokemon) {\n        case \"Fighting\":\n          return 2;\n        case \"Poison\":\n          return 2;\n        case \"Psychic\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Flying\":\n      switch (pokemon) {\n        case \"Electric\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Fighting\":\n          return 2;\n        case \"Bug\":\n          return 2;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Ground\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Electric\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 2;\n        case \"Flying\":\n          return 0;\n        case \"Bug\":\n          return 0.5;\n        case \"Rock\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Poison\":\n      switch (pokemon) {\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Ground\":\n          return 0.5;\n        case \"Bug\":\n          return 2;\n        case \"Rock\":\n          return 0.5;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Fighting\":\n      switch (pokemon) {\n        case \"Normal\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Psychic\":\n          return 0.5;\n        case \"Flying\":\n          return 0.5;\n        case \"Bug\":\n          return 0.5;\n        case \"Rock\":\n          return 2;\n        case \"Ghost\":\n          return 0;\n        default:\n          return 1;\n      }\n    case \"Ice\":\n      switch (pokemon) {\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Flying\":\n          return 2;\n        case \"Dragon\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Grass\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Water\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Flying\":\n          return 0.5;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Electric\":\n      switch (pokemon) {\n        case \"Water\":\n          return 2;\n        case \"Electric\":\n          return 0.5;\n        case \"Grass\":\n          return 0.5;\n        case \"Ground\":\n          return 0;\n        case \"Flying\":\n          return 2;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Water\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Rock\":\n          return 2;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Fire\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Bug\":\n          return 2;\n        case \"Rock\":\n          return 0.5;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Normal\":\n      switch (pokemon) {\n        case \"Rock\":\n          return 0.5;\n        case \"Ghost\":\n          return 0;\n        default:\n          return 1;\n      }\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport { trainerPokemon } from \"../services/api_helper\";\n\nclass Level extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: []\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemon = await trainerPokemon();\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\nexport default withRouter(Level);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  update,\n  getPokemon,\n  removeMove,\n  addMoves,\n} from \"../services/api_helper\";\n\nclass Evolution extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: null,\n      prevPokemon: null,\n      isClick: false,\n      moves: null,\n      movesLoad: false,\n      testMoves: null,\n      testMovesF: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(\"AM I HERE\");\n    let prevPokemon = this.props.pokemon;\n    this.props.saySomething(`Your ${prevPokemon.name} is about to evolve!!!`);\n    let num = prevPokemon.frontImage.match(/\\d+/g).map(Number);\n    let id = prevPokemon.id;\n    let evolveId = this.props.evolveId;\n\n    num++;\n    let evolvePokemon = await getPokemon(evolveId);\n    let type = evolvePokemon.type;\n    let name = evolvePokemon.name;\n    let health = evolvePokemon.health;\n    let current_health = evolvePokemon.current_health;\n    let frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n    let backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n    let fullyEvolved = evolvePokemon.fullyEvolved;\n    let resp = await getMoves(evolveId);\n    let del = await getMoves(id);\n    let testMoves = [];\n    for (let i = 0; i < del.length; i++) {\n      await removeMove(id, del[i].id);\n    }\n    for (let i = 0; i < resp.length; i++) {\n      testMoves.push(resp[i]);\n      this.newMoves(resp[i], id);\n    }\n    console.log(testMoves);\n\n    const passData = {\n      name,\n      health,\n      current_health,\n      current_experience: 0,\n      fullyEvolved,\n      frontImage,\n      backImage,\n      type,\n    };\n    const resp1 = await update(id, passData);\n    let pokemon = await getPokemon(id);\n    this.setState({ pokemon, prevPokemon, testMoves });\n  };\n\n  newMoves = async (moves, id) => {\n    let postMoveCopy = {\n      name: moves.name,\n      attack: moves.attack,\n      animation: moves.animation,\n      type: moves.type,\n    };\n\n    let resp = await addMoves(id, postMoveCopy);\n    let resp2 = await getMoves(id);\n    this.setState({ moves: resp2 });\n  };\n\n  evolve = () => {\n    let id = this.props.pokemon;\n    this.setState({ isClick: true });\n    // let moves = await getMoves(id);\n    setTimeout(\n      function () {\n        if (this.state.moves.length > 4) {\n          this.props.saySomething(\n            `CONGRATULATIONS! Your ${\n              this.state.prevPokemon.name\n            } evolved into ${this.state.pokemon.name}! However, ${\n              this.state.pokemon.name\n            } have more than 4 moves, delete ${\n              this.state.moves.length - 4\n            } to continue!`\n          );\n        } else {\n          this.props.saySomething(\n            `CONGRATULATIONS! Your ${this.state.prevPokemon.name} evolved into ${this.state.pokemon.name}!`\n          );\n        }\n        this.setState({ movesLoad: true });\n      }.bind(this),\n      5000\n    );\n  };\n\n  delete = async (index, move) => {\n    console.log(move);\n    let id = this.props.pokemon.id;\n    let moves = this.state.moves;\n    moves.splice(index, 1);\n    if (this.state.moves.length > 4) {\n      this.props.saySomething(\n        `${move.name} is removed from ${this.state.pokemon.name}. ${\n          moves.length - 4\n        } more!`\n      );\n    } else {\n      this.props.saySomething(\n        `Thank you Trainer ${localStorage.getItem(\"name\")}!`\n      );\n    }\n\n    this.setState({ moves });\n    const resp = await removeMove(id, move.id);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemon && (\n          <div className=\"evolveContainer\">\n            {/* {this.state.testMoves && <>{console.log(this.state.testMoves)}</>} */}\n            {this.state.isClick && (\n              <img className=\"evolved\" src={this.state.pokemon.frontImage} />\n            )}\n            {console.log(this.state.moves)}\n            <img\n              className={this.state.isClick ? \"faded\" : \"prevPokemon\"}\n              src={this.state.prevPokemon.frontImage}\n            />\n            {!this.state.isClick && (\n              <button className=\"register\" onClick={() => this.evolve()}>\n                PROCEED\n              </button>\n            )}\n            <div className={this.state.movesLoad ? \"evolveMoves\" : \"\"}>\n              {this.state.movesLoad &&\n                this.state.moves.map((move, index) => (\n                  <div key={index} className=\"evolveMovesA\">\n                    <div>{move.name}</div>\n                    <div>{move.attack}</div>\n                    {this.state.moves.length > 4 && (\n                      <button\n                        className=\"deleteMove\"\n                        onClick={(e) => this.delete(index, move)}\n                      >\n                        DEL\n                      </button>\n                    )}\n                  </div>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Evolution;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport {\n  update,\n  trainerPokemon,\n  ownedPokemon,\n  getPokemon,\n} from \"../services/api_helper\";\n\nclass Pokecenter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      pokemon: [],\n      formData: {\n        current_health: null,\n      },\n      isClicked: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.props.saySomething(\"Heal your pokemons by pressing HEAL!\");\n    const user = await trainerPokemon();\n    this.setState({ user });\n    console.log(user);\n  };\n\n  heal = async () => {\n    const user = this.state.user;\n    this.props.saySomething(\"All of your pokemons are now ready to battle!\");\n    for (let i = 0; i < user.length; i++) {\n      let id = user[i].id;\n      let fullHp = user[i].health;\n      let passData = {\n        current_health: fullHp,\n      };\n      const regainHp = await update(id, passData);\n    }\n    this.setState({ isClicked: true });\n  };\n\n  show = async (id) => {\n    const pokemon = [];\n    const resp = await getPokemon(id);\n    pokemon.push(resp);\n    console.log(pokemon);\n    this.setState({ pokemon });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.user && (\n          <div className=\"pokecenter0\">\n            {this.state.isClicked ? (\n              this.state.user.map((data) => (\n                <img className=\"pokeAtCenter\" src={data.frontImage} />\n              ))\n            ) : (\n              <div className=\"pokecenter\"></div>\n            )}\n          </div>\n        )}\n        {!this.state.isClicked && (\n          <button className=\"register\" onClick={() => this.heal()}>\n            HEAL\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Pokecenter);\n","import React from \"react\";\n\nconst HealthBar = props => {\n  return (\n    <div\n      className={props.percentage <= 40 ? \"danger\" : \"healthbar\"}\n      style={{ width: `${props.percentage}%` }}\n    />\n  );\n};\n\nexport default HealthBar;\n","import React from \"react\";\nimport HealthBar from \"./healthBar\";\n\nconst MaxHealthBar = props => {\n  return (\n    <div className=\"maxhealthbar\">\n      <HealthBar percentage={props.percentage} />\n    </div>\n  );\n};\n\nexport default MaxHealthBar;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  update,\n  storePokemon,\n  addMoves,\n  ownedPokemon,\n  getPokemon,\n  removeMove,\n  getAllPokemon,\n  typeAdvantage,\n  useAdvantage,\n} from \"../services/api_helper\";\n\nimport Level from \"./Level\";\nimport Evolution from \"./Evolution\";\nimport Pokecenter from \"./Pokecenter\";\nimport MaxHealthBar from \"./maxHealthBar\";\nimport { FaSketch } from \"react-icons/fa\";\n\nclass Battle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      npc: [],\n      npcAnimation: null,\n      userAnimation: null,\n      postData: {\n        name: null,\n        frontImage: null,\n        backImage: null,\n        health: null,\n        current_health: null,\n        type: null,\n      },\n      postMove: [],\n      arrayPostMoves: [],\n      npcAttack: null,\n      userPokemon: null,\n      userPokemonAttacks: null,\n      fighterPokemon: null,\n      evolveId: null,\n      catch: false,\n      change: false,\n      formData: {\n        current_health: null,\n      },\n      win: false,\n      npcTurn: false,\n      userTurn: false,\n      count: null,\n      battle: false,\n      evolve: false,\n      rip:\n        \"https://b7.pngbarn.com/png/250/103/headstone-grave-cemetery-rest-in-peace-grave-s-png-clip-art-thumbnail.png\",\n    };\n  }\n\n  componentDidMount = async () => {\n    const npc = this.props.pokemonID;\n    const userPokemon = await trainerPokemon();\n    const fighterPokemon = userPokemon[0];\n    const npcAttack = await getMoves(npc.id);\n    const userPokemonAttacks = await getMoves(fighterPokemon.id);\n    console.log(userPokemonAttacks);\n    const name = npc.name;\n    const current_experience = npc.current_experience;\n    const total_experience = npc.total_experience;\n    const level = npc.level;\n    const frontImage = npc.frontImage;\n    const backImage = npc.backImage;\n    const health = npc.health;\n    const fullyEvolved = npc.fullyEvolved;\n    const moveName = npcAttack.name;\n    const moveAttack = npcAttack.attack;\n    const current_health = npc.current_health;\n    const type = npc.type;\n    let count = null;\n    if (userPokemon.length < 6) {\n      count = 3;\n    } else {\n      count = 0;\n    }\n    console.log(count);\n\n    this.setState({\n      count,\n      npc,\n      userPokemon,\n      fighterPokemon,\n      npcAttack,\n      userPokemonAttacks,\n      postData: {\n        name,\n        frontImage,\n        backImage,\n        health,\n        current_health,\n        level,\n        total_experience,\n        current_experience,\n        fullyEvolved,\n        type,\n      },\n      formData: {\n        current_health,\n      },\n    });\n\n    for (let i = 0; i < npcAttack.length; i++) {\n      const postMoveCopy = {\n        name: npcAttack[i].name,\n        attack: npcAttack[i].attack,\n        animation: npcAttack[i].animation,\n        type: npcAttack[i].type,\n      };\n      this.setState((prevState) => ({\n        postMove: [postMoveCopy, ...prevState.postMove],\n      }));\n    }\n  };\n\n  randomFunc(random) {\n    let response = random[Math.floor(Math.random() * random.length)];\n    return response;\n  }\n\n  levelUp = (level) => {\n    this.setState({ fighterPokemon: { ...this.state.fighterPokemon, level } });\n  };\n\n  evolution = async () => {\n    let userHealth = this.state.fighterPokemon.current_health;\n    let fullyEvolved = this.state.fighterPokemon.fullyEvolved;\n    let id = this.state.fighterPokemon.id;\n    let total_experience = this.state.fighterPokemon.total_experience;\n    let current_experience = this.state.fighterPokemon.current_experience;\n    let level = this.state.fighterPokemon.level;\n    let health = this.state.fighterPokemon.health;\n    let frontImage = this.state.fighterPokemon.frontImage;\n    let backImage = this.state.fighterPokemon.backImage;\n    let name = this.state.fighterPokemon.name;\n    let type = this.state.fighterPokemon.type;\n    let presetXP = 1000;\n    let gain = null;\n\n    switch (this.state.npc.level) {\n      case 1:\n        gain = Math.floor(presetXP * 4 * 1.75);\n        break;\n      case 15:\n        gain = Math.floor(presetXP * 6 * 1.75);\n        break;\n      case 30:\n        gain = gain = Math.floor(presetXP * 8 * 1.75);\n        break;\n      case \"bonus\":\n        gain = Math.floor(presetXP * 10 * (1.75 + level * 0.075));\n        break;\n    }\n\n    current_experience += gain;\n    setTimeout(\n      function () {\n        this.props.saySomething(\n          `${this.state.fighterPokemon.name} earned ${gain} worth experiece!`\n        );\n      }.bind(this),\n      3900\n    );\n    if (level < 50) {\n      while (current_experience >= total_experience) {\n        level++;\n        this.levelUp(level);\n        setTimeout(\n          function () {\n            this.props.saySomething(\n              `LEVEL UP to LV ${level}! ${this.state.fighterPokemon.name} earned ${gain} worth experiece!`\n            );\n          }.bind(this),\n          4000\n        );\n        health += 2;\n        current_experience = current_experience - total_experience;\n        total_experience += 1200;\n        if ((level === 15 || level === 30) && fullyEvolved === false) {\n          let evolveId = null;\n          let pokemons = await getAllPokemon();\n          for (let i = 0; i < pokemons.length; i++) {\n            if (this.state.fighterPokemon.name === pokemons[i].name) {\n              evolveId = pokemons[i].id + 1;\n            }\n          }\n          this.setState({ evolve: true, evolveId });\n        }\n      }\n    }\n\n    const passData = {\n      // name,\n      health,\n      current_health: userHealth,\n      level,\n      current_experience,\n      current_health: health,\n      total_experience,\n    };\n    console.log(passData);\n    const resp = await update(id, passData);\n  };\n\n  battleSequence = async () => {\n    this.setState({ battle: true });\n    let formData = this.state.formData;\n    let levelUser = this.state.fighterPokemon.level;\n    let levelNpc = this.state.npc.level;\n    let typeUser = this.state.fighterPokemon.type;\n    let typeNpc = this.state.npc.type;\n    let id = this.state.fighterPokemon.id;\n    let npcHealth = this.state.npc.current_health;\n    let halfHp = this.state.npc.health / 2;\n\n    let randomNpcAttack = this.randomFunc(\n      useAdvantage(this.state.npcAttack, typeUser)\n    );\n\n    let npcAdvantage = typeAdvantage(\n      randomNpcAttack.type,\n      this.state.fighterPokemon.type\n    );\n    let npcAttack = Math.floor(\n      (randomNpcAttack.attack + randomNpcAttack.attack * levelNpc * 0.01) *\n        npcAdvantage\n    );\n    let npcAnimation = randomNpcAttack.animation;\n\n    let randomUserAttack = this.randomFunc(\n      useAdvantage(this.state.userPokemonAttacks, typeNpc)\n    );\n    console.log(this.state.userPokemonAttacks);\n\n    let userHealth = this.state.fighterPokemon.current_health;\n    let userAdvantage = typeAdvantage(\n      randomUserAttack.type,\n      this.state.npc.type\n    );\n\n    let userAttack = Math.floor(\n      (randomUserAttack.attack + randomUserAttack.attack * levelUser * 0.01) *\n        userAdvantage\n    );\n    let userAnimation = randomUserAttack.animation;\n    console.log(this.state.userPokemonAttacks);\n\n    let effective = \"\";\n    if (userAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (userAdvantage === 0.5) effective = \"not effective\";\n\n    this.setState({ userAnimation, userTurn: true });\n    this.props.saySomething(\n      `${this.state.fighterPokemon.name} uses ${randomUserAttack.name}! ${effective} deals ${userAttack}!`\n    );\n\n    effective = \"\";\n    if (npcAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (npcAdvantage === 0.5) effective = \"not effective\";\n\n    npcHealth = npcHealth - userAttack;\n    userHealth = userHealth - npcAttack;\n\n    console.log(npcHealth);\n    setTimeout(\n      function () {\n        this.setState({ userAnimation: null, userTurn: false });\n      }.bind(this),\n      1000\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation, npcTurn: true });\n\n        this.props.saySomething(\n          `${this.state.npc.name} uses ${randomNpcAttack.name}! ${effective} deals ${npcAttack}!`\n        );\n      }.bind(this),\n      1000\n    );\n\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2000\n    );\n\n    if (formData.current_health !== userHealth) {\n      this.setState({\n        formData: {\n          current_health: userHealth,\n        },\n      });\n    }\n    if (npcHealth < 0 || npcHealth === 0) {\n      const passData = {\n        current_health: userHealth,\n      };\n      this.setState({\n        npc: { ...this.state.npc, current_health: 0 },\n        formData: { ...this.state.formData, current_health: userHealth },\n      });\n      // let dice = Math.floor(Math.random() * 11);\n\n      const resp = await update(id, passData);\n      this.evolution();\n    } else if (userHealth < 0 || userHealth === 0) {\n      let index = null;\n      const userPokemon = this.state.userPokemon;\n      let fighterPokemon = this.state.fighterPokemon;\n      for (let i = 0; i < userPokemon.length; i++) {\n        if (userPokemon[i].id === this.state.fighterPokemon.id) {\n          index = i;\n        }\n      }\n      userPokemon.splice(index, 1);\n      const passData = {\n        current_health: 0,\n      };\n\n      if (this.state.userPokemon.length === 0) {\n        setTimeout(\n          function () {\n            this.props.saySomething(\n              \"YOU LOST... Go head to Pokecenter and heal those poor pokemons then try again\"\n            );\n            this.setState({\n              battle: true,\n              fighterPokemon: {\n                ...this.state.fighterPokemon,\n                current_health: 0,\n              },\n            });\n          }.bind(this),\n          3000\n        );\n        const resp = await update(this.state.fighterPokemon.id, passData);\n      } else {\n        fighterPokemon = userPokemon[0];\n        let userPokemonAttacks = await getMoves(fighterPokemon.id);\n        this.setState({\n          fighterPokemon,\n          npc: { ...this.state.npc, current_health: npcHealth },\n          battle: false,\n          userPokemon,\n          userPokemonAttacks,\n        });\n        return;\n      }\n    } else {\n      const passData = {\n        current_health: userHealth,\n      };\n      setTimeout(\n        function () {\n          this.setState({\n            fighterPokemon: {\n              ...this.state.fighterPokemon,\n              current_health: userHealth,\n            },\n            formData: { ...this.state.formData, current_health: userHealth },\n            npc: { ...this.state.npc, current_health: npcHealth },\n            battle: false,\n          });\n        }.bind(this),\n        2500\n      );\n      const resp = await update(id, passData);\n    }\n  };\n\n  setToTrue = () => {\n    this.setState({ catch: true });\n  };\n\n  storePokemon = async () => {\n    const postData = this.state.postData;\n    const postMove = this.state.postMove;\n    const resp = await storePokemon(postData);\n    for (let i = 0; i < postMove.length; i++) {\n      const resp1 = await addMoves(resp.data.id, postMove[i]);\n    }\n  };\n\n  readyCatch = async () => {\n    let npcHp = this.state.npc.current_health;\n    let totalNpcHp = this.state.npc.health;\n    if (npcHp >= Math.floor(totalNpcHp / 2)) {\n      console.log(\"CHECK IF I AM HERE\");\n      console.log(npcHp / 2);\n      let count = this.state.count;\n      count--;\n      this.setState({ catch: true, count });\n      setTimeout(\n        function () {\n          this.props.saySomething(\"Your pokeball broke! Too early!\");\n          this.setState({ catch: false });\n        }.bind(this),\n        2000\n      );\n    } else {\n      let count = this.state.count;\n      count--;\n      this.setState({ catch: true, count });\n      const hp = this.state.npc.current_health;\n      const totalHp = this.state.npc.health;\n      const chance = totalHp * 0.07;\n      const dice = Math.floor(Math.random() * Math.floor(hp));\n      this.props.saySomething(\n        `Trainer ${localStorage.getItem(\"name\")} throws a pokeball!`\n      );\n\n      setTimeout(\n        function () {\n          if (dice <= chance) {\n            this.props.saySomething(`You caught a ${this.state.npc.name}!`);\n            this.storePokemon();\n            this.setState({ battle: true, userPokemon: null });\n            this.props.history.push(\"/newPokemon\");\n          } else {\n            this.props.saySomething(\"Your pokeball broke!\");\n            this.setState({ catch: false });\n          }\n        }.bind(this),\n        2000\n      );\n    }\n  };\n\n  change = async (pokemon) => {\n    console.log(this.state.formData);\n    const fighterPokemonID = this.state.fighterPokemon.id;\n    const formData = this.state.formData;\n    const id = pokemon.id;\n    let randomNpcAttack = this.randomFunc(this.state.npcAttack);\n    let npcAttack = randomNpcAttack.attack;\n    let npcAnimation = randomNpcAttack.animation;\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation, npcTurn: true });\n      }.bind(this),\n      1500\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2500\n    );\n\n    const changedPokemon = await getPokemon(id);\n    this.props.saySomething(\n      `Trainer ${localStorage.getItem(\"name\")} switches ${\n        this.state.fighterPokemon.name\n      } with ${changedPokemon.name}`\n    );\n    let userHealth = changedPokemon.current_health;\n    userHealth = userHealth - npcAttack;\n    const passData = {\n      current_health: userHealth,\n    };\n    const resp = await update(id, passData);\n    const fighterPokemon = await getPokemon(id);\n\n    const resp1 = await update(fighterPokemonID, formData);\n\n    const userPokemonAttacks = await getMoves(id);\n    setTimeout(\n      function () {\n        this.setState({\n          fighterPokemon,\n          userPokemonAttacks,\n          formData: {\n            current_health: userHealth,\n          },\n          battle: false,\n        });\n      }.bind(this),\n      500\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.userPokemon && (\n          <>\n            {this.state.evolve ? (\n              <Evolution\n                saySomething={(e) => this.props.saySomething(e)}\n                pokemon={this.state.fighterPokemon}\n                evolveId={this.state.evolveId}\n              />\n            ) : (\n              <>\n                {this.state.userPokemon && (\n                  <div>\n                    <div className=\"forestBat\">\n                      <div className=\"npc\">\n                        <div>\n                          {this.state.userAnimation && (\n                            <img\n                              className=\"userFX\"\n                              src={this.state.userAnimation}\n                            />\n                          )}\n\n                          <div>\n                            <div className=\"npcA\">\n                              <div className=\"npcB\">\n                                <span className=\"pokeName\">\n                                  LV{this.state.npc.level}\n                                  {this.state.npc.name}\n                                </span>\n                                <div className=\"hpBar\">\n                                  <MaxHealthBar\n                                    percentage={this.state.npc.current_health}\n                                  />\n                                  <div>\n                                    {this.state.npc.current_health}/\n                                    {this.state.npc.health}\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"testNpc\">\n                                {this.state.npc.current_health ? (\n                                  <img\n                                    className={\n                                      this.state.npcTurn\n                                        ? \"npcMove\"\n                                        : \"npcPokemon\"\n                                    }\n                                    src={\n                                      this.state.catch\n                                        ? \"https://thumbs.gfycat.com/GenerousTimelyBrontosaurus-max-1mb.gif\"\n                                        : this.state.npc.frontImage\n                                    }\n                                  />\n                                ) : (\n                                  <img\n                                    className=\"npcPokemonFade\"\n                                    src={this.state.npc.frontImage}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!this.state.battle && (\n                        <>\n                          {this.state.npc.current_health > 0 &&\n                            this.state.fighterPokemon.current_health > 0 && (\n                              <button\n                                className=\"register1\"\n                                onClick={() => this.battleSequence()}\n                              >\n                                FIGHT\n                              </button>\n                            )}\n                        </>\n                      )}\n                      {this.state.npc.current_health <= 0 && (\n                        <Link className=\"register\" to=\"/menu\">\n                          END\n                        </Link>\n                      )}\n                      <div>\n                        <div className=\"userA\">\n                          <div className=\"testUser\">\n                            {this.state.npcAnimation && (\n                              <img\n                                className=\"npcFX\"\n                                src={this.state.npcAnimation}\n                              />\n                            )}\n\n                            {!this.state.fighterPokemon.current_health <= 0 ? (\n                              <img\n                                className={\n                                  this.state.userTurn\n                                    ? \"userMove\"\n                                    : \"userPokemon\"\n                                }\n                                src={this.state.fighterPokemon.backImage}\n                              />\n                            ) : (\n                              <img\n                                className=\"userPokemonFade\"\n                                src={this.state.fighterPokemon.backImage}\n                              />\n                            )}\n                          </div>\n                          <div className=\"userB\">\n                            <span className=\"pokeName\">\n                              LV{this.state.fighterPokemon.level}\n                              {this.state.fighterPokemon.name}\n                            </span>\n                            <div className=\"hpBar\">\n                              <MaxHealthBar\n                                percentage={\n                                  this.state.fighterPokemon.current_health\n                                }\n                              />\n                              <div>\n                                {this.state.fighterPokemon.current_health}/\n                                {this.state.fighterPokemon.health}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <>\n                      {!this.state.battle && (\n                        <div className=\"sparePokemons\">\n                          {this.state.count !== 0 && (\n                            <span>\n                              <>\n                                <img\n                                  className=\"imagePoke1\"\n                                  onClick={() => this.readyCatch()}\n                                  src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                                />\n                                x{this.state.count}\n                              </>\n                            </span>\n                          )}\n                          {this.state.userPokemon.map((data, index) => (\n                            <div key={index}>\n                              <img\n                                onClick={() => this.change(data)}\n                                src={this.state.userPokemon[index].frontImage}\n                              />\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </>\n                  </div>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Battle);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport { getPokemon, trainerPokemon } from \"../services/api_helper\";\n\nimport Battle from \"./Battle\";\n\nclass Forest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      routeMaps: [\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 1-35\",\n          arrayPokemons: [\n            19,\n            41,\n            39,\n            16,\n            46,\n            54,\n            27,\n            63,\n            66,\n            69,\n            77,\n            81,\n            100,\n            142,\n            143,\n            74,\n            129,\n          ],\n          rank: \"high\",\n        },\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 36-75\",\n          arrayPokemons: [\n            29,\n            32,\n            37,\n            58,\n            108,\n            60,\n            26,\n            111,\n            106,\n            107,\n            134,\n            135,\n            136,\n            25,\n          ],\n          rank: \"high\",\n        },\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 75-100\",\n          arrayPokemons: [\n            43,\n            13,\n            50,\n            21,\n            23,\n            24,\n            115,\n            124,\n            125,\n            126,\n            127,\n            124,\n            123,\n            131,\n            147,\n          ],\n          rank: \"high\",\n        },\n      ],\n      pokemons: [],\n      picked: null,\n      chosenPokemon: null,\n      isClicked: false,\n      proceed: false,\n      rank: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.saySomething(\n      \" Choose any of the forest then press HUNT button to either catch a pokemon or just battle! HAPPY HUNTING!\"\n    );\n    console.log(this.state.win);\n  };\n\n  resetMap = () => {\n    const pokemons = \"\";\n    this.setState({ pokemons });\n  };\n\n  forestPokemons = async (data) => {\n    this.props.saySomething(\"WAIT FOR IT!!!\");\n    const id = data.arrayPokemons;\n    console.log(id.length);\n    this.resetMap();\n    for (let i = 0; i < id.length; i++) {\n      const pokemons = await getPokemon(id[i]);\n      this.setState({\n        pokemons: [...this.state.pokemons, pokemons],\n        isClicked: true,\n      });\n    }\n\n    this.props.saySomething(\"Try Hunting NOW!\");\n\n    this.setState({ rank: data.rank });\n  };\n\n  battle = async () => {\n    let resp = await trainerPokemon();\n    let level = resp.pop().level;\n    let arrayPokemons = this.state.pokemons;\n    let chance = Math.floor(arrayPokemons.length * 0.5);\n    if (level > 15) {\n      for (let i = 0; i < chance; i++) {\n        arrayPokemons.shift();\n      }\n    }\n    console.log(arrayPokemons);\n    const chosenPokemon =\n      arrayPokemons[\n        Math.floor(Math.random() * Math.floor(arrayPokemons.length - 1))\n      ];\n\n    this.setState({ proceed: true, chosenPokemon });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.proceed ? (\n          <Battle\n            rank={this.state.rank}\n            saySomething={(e) => this.props.saySomething(e)}\n            pokemonID={this.state.chosenPokemon}\n          />\n        ) : (\n          <>\n            <div>\n              <div className=\"forest\">\n                {this.state.routeMaps.map((data) => (\n                  <div className=\".grass\">\n                    <img\n                      className=\"grassImg\"\n                      onClick={() => this.forestPokemons(data)}\n                      src={data.image}\n                    />\n                    <h5>{data.name}</h5>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {this.state.isClicked && (\n              <div className=\"possible\">\n                <button className=\"registerHunt\" onClick={() => this.battle()}>\n                  HUNT\n                </button>\n                <p className=\"woods\">\n                  These are your possible pokemons to catch. Scroll up the\n                  pokemons to view!\n                </p>\n              </div>\n            )}\n            {this.state.pokemons && (\n              <div className=\"pokemonContainer\">\n                {this.state.pokemons.map((data) => (\n                  <div>\n                    <img className=\"pokemon\" src={data.frontImage} />\n                  </div>\n                ))}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Forest);\n","import React, { Component } from \"react\";\n\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form\">\n        {this.props.errorText && <p>{this.props.errorText}</p>}\n        <form onSubmit={e => this.props.handleRegister(e, this.state)}>\n          <label htmlFor=\"name\">TRAINERNAME</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            className=\"label\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"password\">PASSWORD</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"label\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"submit\">SUBMIT</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { getAllPokemon } from \"../services/api_helper\";\n\nexport default class Pokedex extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemons: []\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemons = await getAllPokemon();\n    this.setState({ pokemons });\n\n    // let string =\n    //   \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/104.png\";\n\n    // let test = string.match(/\\d+/g).map(Number);\n    // test++;\n    // console.log(\n    //   \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n    //     test +\n    //     \".png\"\n    // );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemons && (\n          <>\n            {this.state.pokemons.map((data, index) => (\n              <div key={index} className=\"desc\">\n                <h4>{data.name}</h4>\n                <img\n                  onClick={() => this.checkMoves(index)}\n                  src={data.frontImage}\n                />\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  render() {\n    return (\n      <div className=\"form\">\n        <form onSubmit={e => this.props.handleLogin(e, this.state)}>\n          <label htmlFor=\"username\">TRAINERNAME</label>\n          <input\n            className=\"label\"\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">PASSWORD</label>\n          <input\n            className=\"label\"\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"submit\">SUBMIT</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport {\n  getPokemon,\n  storePokemon,\n  getMoves,\n  addMoves,\n} from \"../services/api_helper\";\n\nclass ChooseStarter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      num: [1, 4, 7, 92, 152, 154],\n      ownPokemon: null,\n      chosenPokemonId: null,\n      starters: [],\n      riolu: null,\n      rioluMoves: null,\n      starterMoves: [],\n      arrayMoveData: [],\n      moveData1: {\n        name: null,\n        attack: null,\n        animation: null,\n        type: null,\n      },\n      moveData2: {\n        name: null,\n        attack: null,\n        animation: null,\n        type: null,\n      },\n      formData: {\n        name: null,\n        frontImage: null,\n        backImage: null,\n        health: null,\n        current_health: null,\n        level: 1,\n        total_experience: 300,\n        current_experience: 0,\n        fullyEvolved: null,\n        type: null,\n      },\n      isClicked: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    const starters = [];\n    const starterMoves = [];\n    const num = this.state.num;\n    let id = [];\n    for (let i = 0; i < 3; i++) {\n      let index = Math.floor(Math.random() * Math.floor(num.length));\n      id.push(num.splice(index, 1));\n    }\n    console.log(id);\n\n    for (let i = 0; i < 3; i++) {\n      const resp = await getPokemon(id[i]);\n      const resp1 = await getMoves(id[i]);\n      console.log(resp1);\n      starters.push(resp);\n      starterMoves.push(resp1);\n    }\n    const riolu = await getPokemon(152);\n    const rioluMoves = await getMoves(152);\n    console.log(starters);\n    this.props.saySomething(\"Choose a starter pokemon\");\n    this.setState({ starters, starterMoves, riolu, rioluMoves });\n  };\n\n  chosenPokemon = (pokemon, moves) => {\n    const chosenPokemonId = pokemon.id;\n    const starterMoves = [];\n\n    this.props.saySomething(`${pokemon.name} a ${pokemon.type} pokemon!`);\n\n    this.setState({\n      moveData1: {\n        ...this.state.moveData,\n        name: moves[0].name,\n        attack: moves[0].attack,\n        animation: moves[0].animation,\n        type: moves[0].type,\n      },\n    });\n    this.setState({\n      moveData2: {\n        ...this.state.moveData,\n        name: moves[1].name,\n        attack: moves[1].attack,\n        animation: moves[1].animation,\n        type: moves[1].type,\n      },\n    });\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        name: pokemon.name,\n        frontImage: pokemon.frontImage,\n        backImage: pokemon.backImage,\n        health: pokemon.health,\n        current_health: pokemon.current_health,\n        fullyEvolved: pokemon.fullyEvolved,\n        type: pokemon.type,\n      },\n    });\n    this.passMoves(moves);\n\n    this.setState({\n      isClicked: true,\n      chosenPokemonId,\n    });\n  };\n\n  passMoves = (moves) => {\n    this.setState({\n      moveData1: {\n        ...this.state.moveData1,\n        name: moves[0].name,\n        attack: moves[0].attack,\n        animation: moves[0].animation,\n        type: moves[0].type,\n      },\n      moveData2: {\n        ...this.state.moveData2,\n        name: moves[1].name,\n        attack: moves[1].attack,\n        animation: moves[1].animation,\n        type: moves[1].type,\n      },\n    });\n  };\n\n  savePokemon = async () => {\n    const pokemon = await storePokemon(this.state.formData);\n    // const resp = await getPokemon(25);\n    // const respMove = await getMoves(25);\n    // const data = {\n    //   name: resp.name,\n    //   frontImage: resp.frontImage,\n    //   backImage: resp.backImage,\n    //   level: resp.level,\n    //   health: resp.health,\n    //   current_health: resp.current_health,\n    //   current_experience: resp.current_experience,\n    //   total_experience: resp.total_experience,\n    //   fullyEvolved: resp.fullyEvolved,\n    //   type: resp.type,\n    // };\n    // const getPika = await storePokemon(data);\n    // for (let i = 0; i < respMove.length; i++) {\n    //   let dataMove = {\n    //     name: respMove[i].name,\n    //     attack: respMove[i].attack,\n    //     animation: respMove[i].animation,\n    //     type: respMove[i].type,\n    //   };\n    //   await addMoves(getPika.id, dataMove);\n    // }\n    const id = pokemon.data.id;\n    const move1 = await addMoves(id, this.state.moveData1);\n    const move2 = await addMoves(id, this.state.moveData2);\n    this.props.history.push(\"/newPokemon\");\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.starters && (\n          <div>\n            {this.state.isClicked && (\n              <div className=\"choose\">\n                <img className=\"pokemon\" src={this.state.formData.frontImage} />\n                <p className=\"name\">{this.state.formData.name}</p>\n              </div>\n            )}\n            <div className=\"setPokeball\">\n              {this.state.starters.map((pokemon, index) => (\n                <div key={index}>\n                  <img\n                    className=\"pokeball\"\n                    onClick={() =>\n                      this.chosenPokemon(\n                        pokemon,\n                        this.state.starterMoves[index]\n                      )\n                    }\n                    src=\"https://purepng.com/public/uploads/medium/purepng.com-pokeballpokeballdevicepokemon-ballpokemon-capture-ball-1701527825795vtfp2.png\"\n                  />\n                </div>\n              ))}\n            </div>\n            {this.state.isClicked && (\n              <button className=\"register\" onClick={() => this.savePokemon()}>\n                CONFIRM\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ChooseStarter);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  remove,\n  removeMove,\n} from \"../services/api_helper\";\n\nclass Trainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: [],\n      moves: [],\n      showPokemon: {\n        id: null,\n        name: null,\n        frontImage: null,\n        level: null,\n        current_health: null,\n        health: null,\n        current_experience: null,\n        total_experience: null,\n        type: null,\n      },\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(localStorage.getItem(\"name\"));\n    const pokemon = await trainerPokemon();\n    const moves = await getMoves(pokemon[0].id);\n    if (pokemon.length === 0) {\n      this.props.history.push(\"/start\");\n    } else {\n      this.props.saySomething(\"Here are your pokemons\");\n      const showPokemon = {\n        id: pokemon[0].id,\n        name: pokemon[0].name,\n        frontImage: pokemon[0].frontImage,\n        level: pokemon[0].level,\n        current_health: pokemon[0].current_health,\n        health: pokemon[0].health,\n        current_experience: pokemon[0].current_experience,\n        total_experience: pokemon[0].total_experience,\n        type: pokemon[0].type,\n      };\n      this.setState({ pokemon, showPokemon, moves });\n    }\n  };\n  isFree = async (regards) => {\n    this.props.saySomething(`Say goodbye to ${regards.name}`);\n    const resp = await remove(regards.id);\n    const pokemon = await trainerPokemon();\n    this.setState({ pokemon });\n  };\n\n  showMoves = async (pokemon) => {\n    this.props.saySomething(\n      `This is your ${pokemon.name}, you can free your pokemon by pressing FREE button at the buttom.`\n    );\n    const moves = await getMoves(pokemon.id);\n    const frontImage = pokemon.frontImage;\n    const level = pokemon.level;\n    const name = pokemon.name;\n    const health = pokemon.health;\n    const current_health = pokemon.current_health;\n    const current_experience = pokemon.current_experience;\n    const total_experience = pokemon.total_experience;\n    const id = pokemon.id;\n    const type = pokemon.type;\n    console.log(pokemon);\n\n    this.setState({\n      isClicked: true,\n      moves,\n      showPokemon: {\n        ...this.state.showPokemon,\n        id,\n        frontImage,\n        name,\n        level,\n        health,\n        current_experience,\n        total_experience,\n        health,\n        current_health,\n        type,\n      },\n    });\n  };\n\n  delete = async (index, move) => {\n    console.log(move);\n    let id = this.props.pokemon.id;\n    let moves = this.state.moves;\n\n    moves.splice(index, 1);\n    this.setState({ moves });\n    const resp = await removeMove(id, move.id);\n  };\n\n  render() {\n    return (\n      <div className=\"typeA\">\n        <div className=\"trainerName\">\n          <h1>TRAINER {localStorage.getItem(\"name\")}</h1>\n        </div>\n        {this.state.pokemon && (\n          <div className=\"trainer\">\n            <div className=\"trainerA\">\n              {this.state.pokemon.map((data) => (\n                <div>\n                  <img\n                    className=\"trainerPokemon\"\n                    src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                    onClick={() => this.showMoves(data)}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"moveContainer\">\n              {this.state.showPokemon && (\n                <div className=\"specificPokemonA\">\n                  <div className=\"specificPokemonB\">\n                    <div className=\"levelName\">\n                      <h4>{this.state.showPokemon.name}</h4>\n                      <p>Level {this.state.showPokemon.level}</p>\n                    </div>\n                    <img\n                      className=\"specificPokemon\"\n                      src={this.state.showPokemon.frontImage}\n                    />\n                    <div className=\"pokemonDetails\">\n                      <div>Type: {this.state.showPokemon.type}</div>\n                      <div>\n                        HP {this.state.showPokemon.current_health} /\n                        {this.state.showPokemon.health}\n                      </div>\n                      <div>\n                        XP {this.state.showPokemon.current_experience} /{\" \"}\n                        {this.state.showPokemon.total_experience}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div class=\"movesets\">\n                <h4>MOVES</h4>\n                {this.state.moves && (\n                  <div>\n                    {this.state.moves.map((data, index) => (\n                      <div key={index}>\n                        <div>\n                          {data.name}:{data.attack}\n                        </div>\n                        {this.state.moves.length > 4 && (\n                          <button onClick={(e) => this.delete(index, data)}>\n                            DEL\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              {this.state.isClicked && (\n                <button\n                  className=\"register\"\n                  onClick={() => this.isFree(this.state.showPokemon)}\n                >\n                  free\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Trainer);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getChampion, getAllPokemon } from \"../services/api_helper\";\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      champion: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const champion = await getChampion();\n\n    if (champion) {\n      this.props.saySomething(\n        `Here is the menu... Be the greatest trainer by defeating the Reigning Champion!`\n      );\n    } else {\n      this.props.saySomething(\n        \"Here is the menu... At this moment there is no Pokemon Champion in this league. You have to finish the League in order to be one.\"\n      );\n    }\n    this.setState({\n      champion,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <div className=\"champContainer\">\n          <img src=\"https://i.gifer.com/6x6G.gif\" />\n          {this.state.champion ? (\n            <>\n              <h4>{this.state.champion.username}</h4>\n              <div className=\"pokemonMaster\">POKEMON MASTER</div>\n            </>\n          ) : (\n            <>NO CHAMPION</>\n          )}\n        </div>\n        <Link className=\"menuButton\" to=\"/trainer\">\n          PROFILE\n        </Link>\n        <Link className=\"menuButton\" to=\"/forest\">\n          FOREST\n        </Link>\n        <Link className=\"menuButton\" to=\"/pokecenter\">\n          POKECENTER\n        </Link>\n        <Link className=\"menuButton\" to=\"/league\">\n          LEAGUE\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Route, withRoute } from \"react-router-dom\";\nimport { trainerPokemon, ownedPokemon } from \"../services/api_helper\";\n\nimport ChooseStarter from \"./ChooseStarter\";\nimport Trainer from \"./Trainer\";\nimport Menu from \"./Menu\";\n\nclass StartGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      name: null,\n      pokemons: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemons = await ownedPokemon(localStorage.getItem(\"id\"));\n    // pokemons.data.pokemon;\n    if (pokemons.data.pokemon.length !== 0) {\n      this.setState({ pokemons });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemons ? (\n          <Menu saySomething={e => this.props.saySomething(e)} />\n        ) : (\n          <ChooseStarter saySomething={e => this.props.saySomething(e)} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default StartGame;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nclass Outcomes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"winner\">\n        <h1 className=\"headChamp\">CONGRATULATIONS</h1>\n        <img className=\"trophy\" src=\"https://i.gifer.com/6x6G.gif\" />\n        <h1 className=\"name\">CHAMPION {localStorage.getItem(\"name\")}</h1>\n        <div className=\"champPokemon\">\n          {this.props.pokemon &&\n            this.props.pokemon.map((data) => (\n              <>\n                <img className=\"champImg\" src={data.frontImage} />\n              </>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Outcomes);\n","import React, { Component } from \"react\";\nimport {\n  getPokemon,\n  trainerPokemon,\n  getMoves,\n  update,\n  addMoves,\n  removeMove,\n  getChampion,\n  ownedPokemon,\n  newChampion,\n  typeAdvantage,\n  useAdvantage,\n  getAllTrainer,\n} from \"../services/api_helper\";\n\nimport MaxHealthBar from \"./maxHealthBar\";\nimport Outcome from \"./Outcome\";\n\nclass League extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentNpc: {\n        name: null,\n        image: null,\n        message: null,\n      },\n      introChamp: false,\n      userWin: false,\n      user: null,\n      userHealed: null,\n      userPokemon: null,\n      userMoves: null,\n      npc: null,\n      npcPokemon: null,\n      npcMoves: null,\n      userAnimation: null,\n      npcAnimation: null,\n      userTurn: false,\n      npcTurn: false,\n      isStart: false,\n      isChamp: false,\n      battle: false,\n      currentTip: null,\n      ready: false,\n      rip:\n        \"https://b7.pngbarn.com/png/250/103/headstone-grave-cemetery-rest-in-peace-grave-s-png-clip-art-thumbnail.png\",\n      formData: {\n        current_health: null,\n      },\n      tips: [\n        \"In battle always choose a pokemon that have a type advantage against opponents pokemon\",\n        \"Every trainer can only have 6 pokemons at max\",\n        \"The more type diverse your line up is, the better\",\n        \"The lower the hp of a wild pokemon you're trying to catch the higher chances of capturing it\",\n        \"Unevolved pokemons will evolve once they reach level 15 or 30\",\n        \"Don't forget to have fun!\",\n        \"Let this load for a few minutes while I am gathering your opponents\",\n        \"I am currently in the process of gathering all of your opponents, please wait for a moment\",\n        \"Thank you for waiting\",\n      ],\n      gymLeader: [\n        {\n          name: \"Brock\",\n          message: \"Good job trainer\",\n          image:\n            \"https://em.wattpad.com/65355e3409b8e29cdf2256fe160ea59cd3787abc/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f776174747061642d6d656469612d736572766963652f53746f7279496d6167652f6b4945516f5a373041744f5034413d3d2d3335323236323731302e313439346530303531623832313934383639373839303938313438352e706e67?s=fit&w=720&h=720\",\n          array: [74, 95],\n          pokemon: [],\n        },\n        {\n          name: \"Misty\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f6/Lets_Go_Pikachu_Eevee_Misty.png/183px-Lets_Go_Pikachu_Eevee_Misty.png\",\n          array: [120, 121],\n          pokemon: [],\n        },\n        {\n          name: \"Lt. Surge\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/b/bc/Lets_Go_Pikachu_Eevee_Lt_Surge.png/216px-Lets_Go_Pikachu_Eevee_Lt_Surge.png\",\n          array: [25, 25, 26],\n          pokemon: [],\n        },\n        {\n          name: \"Erika\",\n          message: \"Good job trainer\",\n          image:\n            \"https://projectpokemon.org/home/uploads/monthly_2019_06/large.celadon-city-char-erika.png.723ad4918835af3cb562f78c11a971db.png\",\n          array: [114, 70, 71],\n          pokemon: [],\n        },\n        {\n          name: \"Koga\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f4/Lets_Go_Pikachu_Eevee_Koga.png/225px-Lets_Go_Pikachu_Eevee_Koga.png\",\n          array: [109, 89, 109, 110],\n          pokemon: [],\n        },\n        {\n          name: \"Sabrina\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/7/78/Lets_Go_Pikachu_Eevee_Sabrina.png/211px-Lets_Go_Pikachu_Eevee_Sabrina.png\",\n          array: [64, 122, 49, 65],\n          pokemon: [],\n        },\n        {\n          name: \"Blaine\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/c/c8/Lets_Go_Pikachu_Eevee_Blaine.png/216px-Lets_Go_Pikachu_Eevee_Blaine.png\",\n          array: [38, 78, 59, 126],\n          pokemon: [],\n        },\n        {\n          name: \"Giovanni\",\n          message: \"Good job trainer\",\n          image:\n            \"https://gamepedia.cursecdn.com/wiki_marriland/f/f2/Giovanni.png\",\n          array: [53, 111, 112, 115, 31],\n          pokemon: [],\n        },\n      ],\n      eliteFour: [\n        {\n          name: \"Lorelei\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f7/Lets_Go_Pikachu_Eevee_Lorelei.png/162px-Lets_Go_Pikachu_Eevee_Lorelei.png\",\n          array: [87, 124, 91, 80, 131],\n          pokemon: [],\n        },\n        {\n          name: \"Bruno\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/4/4c/Lets_Go_Pikachu_Eevee_Bruno.png/200px-Lets_Go_Pikachu_Eevee_Bruno.png\",\n          array: [95, 106, 95, 107, 68],\n          pokemon: [],\n        },\n        {\n          name: \"Agatha\",\n          message: \"Good job trainer\",\n          image:\n            \"https://vignette.wikia.nocookie.net/pokemon/images/c/c9/Agatha_Lets_Go_Pikachu_Eevee.png/revision/latest?cb=20181120184616\",\n          array: [93, 42, 93, 24, 94],\n          pokemon: [],\n        },\n        {\n          name: \"Lance\",\n          message: \"Good job trainer\",\n          image:\n            \"https://vignette.wikia.nocookie.net/vsbattles/images/f/f5/HeartGold_SoulSilver_Lance.png/revision/latest/scale-to-width-down/340?cb=20161217185553\",\n          array: [130, 148, 142, 148, 149],\n          pokemon: [],\n        },\n      ],\n      champion: {\n        id: null,\n        name: null,\n        message: \"Well done trainer\",\n        pokemon: null,\n      },\n    };\n  }\n\n  componentDidMount = async () => {\n    let currentTip = null;\n    currentTip = this.state.tips[0];\n    this.setState({ currentTip });\n    const gymLeader = this.state.gymLeader;\n    const eliteFour = this.state.eliteFour;\n    let gymLeaderCopy = JSON.parse(JSON.stringify(gymLeader));\n    let eliteFourCopy = JSON.parse(JSON.stringify(eliteFour));\n    this.props.saySomething(\n      \"Challenge the Pokemon Master by defeating all the Gym Leaders and Elite Four!\"\n    );\n\n    for (let i = 0; i < gymLeader.length; i++) {\n      for (let j = 0; j < gymLeader[i].array.length; j++) {\n        const id = gymLeader[i].array[j];\n        gymLeaderCopy[i].pokemon.push(await getPokemon(id));\n      }\n      this.setState({\n        gymLeader: gymLeaderCopy,\n      });\n    }\n\n    const user = await trainerPokemon();\n    const userHealed = user;\n    const userPokemon = user[0];\n    console.log(userHealed);\n    const userMoves = await getMoves(userPokemon.id);\n    this.setState({ user, userHealed, userPokemon, userMoves, heal: 5 });\n\n    for (let i = 0; i < eliteFour.length; i++) {\n      for (let j = 0; j < eliteFour[i].array.length; j++) {\n        const id = eliteFour[i].array[j];\n        eliteFourCopy[i].pokemon.push(await getPokemon(id));\n      }\n      this.setState({\n        eliteFour: eliteFourCopy,\n      });\n    }\n\n    this.setState({ ready: true });\n\n    const champion = await getChampion();\n    if (champion) {\n      const idChamp = champion.id;\n      const resp = await ownedPokemon(idChamp);\n      const pokemon = resp.data.pokemon;\n      const name = champion.username;\n      this.setState({\n        champion: { ...this.state.champion, id: idChamp, name, pokemon },\n      });\n    }\n  };\n\n  newNpc = async (enemy) => {\n    const user = this.state.userHealed;\n    const userPokemon = this.state.userPokemon;\n    const userMoves = await getMoves(userPokemon.id);\n    this.setState({ user, userMoves });\n    const npcContainer = enemy.shift();\n    const npc = npcContainer.pokemon;\n    const name = npcContainer.name;\n    const image = npcContainer.image;\n    const message = npcContainer.message;\n\n    const npcPokemon = npc.shift();\n    const npcMoves = await getMoves(npcPokemon.id);\n\n    this.setState({\n      currentNpc: {\n        name,\n        image,\n        message,\n      },\n      npc,\n      npcPokemon,\n      npcMoves,\n      isStart: true,\n    });\n  };\n\n  finalMatch = async (enemy) => {\n    const npc = this.state.champion.pokemon;\n    const user = this.state.userHealed;\n    const userPokemon = user[0];\n    const userMoves = await getMoves(userPokemon.id);\n\n    const npcPokemon = npc.shift();\n    const npcMoves = await getMoves(npcPokemon.id);\n    setTimeout(\n      function () {\n        this.setState({ introChamp: false });\n        this.setState({\n          user,\n          userPokemon,\n          npc,\n          npcPokemon,\n          npcMoves,\n          battle: false,\n          isStart: true,\n          userWin: false,\n        });\n      }.bind(this),\n      7500\n    );\n  };\n\n  battleStart = async () => {\n    const gymLeader = this.state.gymLeader;\n    const eliteFour = this.state.eliteFour;\n    let enemy = null;\n    let champ = null;\n\n    if (gymLeader.length !== 0) {\n      enemy = gymLeader;\n      this.newNpc(enemy);\n    } else if (gymLeader.length === 0 && eliteFour.length !== 0) {\n      enemy = eliteFour;\n      this.newNpc(enemy);\n    } else if (gymLeader.length === 0 && eliteFour.length === 0) {\n      champ = await getChampion();\n      if (\n        this.state.champion.pokemon &&\n        this.state.champion.pokemon.length !== 0\n      ) {\n        this.setState({ introChamp: true });\n        this.props.saySomething(\n          `Behold the Pokemon Champion ${champ.username}! Is here!`\n        );\n        this.finalMatch();\n      } else {\n        const postData = {\n          rank: \"champion\",\n        };\n\n        const id = localStorage.getItem(\"id\");\n        const resp = await newChampion(id, postData);\n        if (this.state.champion.id) {\n          const formerChamp = {\n            rank: \"undefined\",\n          };\n          const resp1 = await newChampion(this.state.champion.id, formerChamp);\n        }\n        this.setState({ isChamp: true, npcPokemon: null });\n        this.props.saySomething(\"YOU ARE THE NEW CHAMPION!\");\n      }\n    }\n  };\n\n  evolution = async () => {\n    let type = this.state.userPokemon.type;\n    let userHealth = this.state.userPokemon.current_health;\n    let fullyEvolved = this.state.userPokemon.fullyEvolved;\n    let id = this.state.userPokemon.id;\n    let total_experience = this.state.userPokemon.total_experience;\n    let current_experience = this.state.userPokemon.current_experience;\n    let level = this.state.userPokemon.level;\n    let health = this.state.userPokemon.health;\n    let frontImage = this.state.userPokemon.frontImage;\n    let backImage = this.state.userPokemon.backImage;\n    let num = frontImage.match(/\\d+/g).map(Number);\n\n    current_experience = current_experience + (total_experience * 1.5) / level;\n\n    if (level < 100) {\n      if (current_experience >= total_experience) {\n        level++;\n        health += 2;\n        current_experience = current_experience - total_experience;\n        if (current_experience < 0) current_experience = 0;\n        if (level === 15 && fullyEvolved === false) {\n          num++;\n          frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n          backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n          let resp = await getMoves(num);\n          let del = await getMoves(id);\n          for (let i = 0; i < del.length; i++) {\n            await removeMove(id, del[i].id);\n          }\n          for (let i = 0; i < resp.length; i++) {\n            this.newMoves(resp[i], id);\n          }\n        } else if (level === 30 && fullyEvolved === false) {\n          num++;\n          frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n          backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n          fullyEvolved = true;\n          let resp = await getMoves(num);\n          let del = await getMoves(id);\n          for (let i = 0; i < del.length; i++) {\n            await removeMove(id, del[i].id);\n          }\n          for (let i = 0; i < resp.length; i++) {\n            this.newMoves(resp[i], id);\n          }\n        }\n      }\n    }\n    const passData = {\n      health,\n      current_health: userHealth,\n      level,\n      current_experience,\n      frontImage,\n      backImage,\n      type,\n    };\n    const resp = await update(id, passData);\n  };\n\n  //*************************************************** */\n\n  randomFunc(random) {\n    let response = random[Math.floor(Math.random() * random.length)];\n    return response;\n  }\n\n  newMoves = async (moves, id) => {\n    let postMoveCopy = {\n      name: moves.name,\n      attack: moves.attack,\n      animation: moves.animation,\n      type: moves.type,\n    };\n\n    let resp = await addMoves(id, postMoveCopy);\n  };\n\n  battleSequence = async () => {\n    console.log(this.state.userHealed);\n    this.setState({ battle: true });\n    let typeUser = this.state.userPokemon.type;\n    let typeNpc = this.state.npcPokemon.type;\n    let levelUser = this.state.userPokemon.level;\n    let levelNpc = this.state.npcPokemon.level;\n    let formData = this.state.formData;\n    let id = this.state.userPokemon.id;\n    let npcHealth = this.state.npcPokemon.current_health;\n    let halfHp = this.state.npcPokemon.health / 2;\n    let randomNpcAttack = this.randomFunc(\n      useAdvantage(this.state.npcMoves, typeUser)\n    );\n    let npcAdvantage = typeAdvantage(randomNpcAttack.type, typeUser);\n    let npcAttack =\n      Math.floor(randomNpcAttack.attack * (1 + levelNpc * 0.01)) * npcAdvantage;\n    let npcAnimation = randomNpcAttack.animation;\n    let userHealth = this.state.userPokemon.current_health;\n    let randomUserAttack = this.randomFunc(\n      useAdvantage(this.state.userMoves, typeNpc)\n    );\n\n    let userAdvantage = typeAdvantage(randomUserAttack.type, typeNpc);\n    let userAttack =\n      Math.floor(randomUserAttack.attack * (1 + levelUser * 0.01)) *\n      userAdvantage;\n\n    let userAnimation = randomUserAttack.animation;\n\n    let effective = \"\";\n    if (userAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (userAdvantage === 0.5) effective = \"not effective\";\n\n    this.setState({ userAnimation, userTurn: true });\n    this.props.saySomething(\n      `${this.state.userPokemon.name} uses ${randomUserAttack.name}! ${effective} deals ${userAttack}!`\n    );\n    effective = \"\";\n    if (npcAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (npcAdvantage === 0.5) effective = \"not effective\";\n    setTimeout(\n      function () {\n        this.setState({ userAnimation: null, userTurn: false });\n      }.bind(this),\n      1000\n    );\n\n    setTimeout(\n      function () {\n        if (this.state.npcPokemon) {\n          this.setState({ npcAnimation, npcTurn: true });\n          this.props.saySomething(\n            `${this.state.npcPokemon.name} uses ${randomNpcAttack.name}! ${effective} deals ${npcAttack}!`\n          );\n        }\n      }.bind(this),\n      1000\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2000\n    );\n\n    npcHealth = npcHealth - userAttack;\n    userHealth = Math.floor(userHealth - npcAttack);\n\n    if (formData.current_health !== userHealth) {\n      this.setState({\n        formData: {\n          current_health: userHealth,\n        },\n      });\n    }\n    // if (npcHealth <= 0 && userHealth <= 0) {\n    //   setTimeout(\n    //     function() {\n    //       this.setState({\n    //         npcPokemon: { ...this.state.npcPokemon, current_health: 0 },\n    //         userPokemon: { ...this.state.userPokemon, current_health: 0 },\n    //         formData: { ...this.state.formData, current_health: userHealth }\n    //       });\n    //     }.bind(this),\n    //     2000\n    //   );\n    // }\n    if (npcHealth < 0 || npcHealth === 0) {\n      // const passData = {\n      //   current_health: 0,\n      // };\n      this.setState({\n        npcPokemon: { ...this.state.npcPokemon, current_health: 0 },\n      });\n      setTimeout(\n        function () {\n          if (this.state.npc.length !== 0) {\n            let index = null;\n            const npc = this.state.npc;\n            const npcPokemon = npc.pop(0);\n            const passData = {\n              current_health: 0,\n            };\n            this.setState({\n              npcPokemon,\n              npc,\n              formData: { ...this.state.formData, current_health: userHealth },\n              battle: false,\n            });\n\n            // const resp = await update(id, passData);\n          } else if (this.state.eliteFour.length === 0) {\n            this.battleStart();\n          } else {\n            this.setState({\n              userWin: true,\n              npcPokemon: null,\n              battle: false,\n              isStart: false,\n            });\n          }\n        }.bind(this),\n        2000\n      );\n      // this.evolution();\n    } else if (userHealth < 0 || userHealth === 0) {\n      let index = null;\n      const user = this.state.user;\n      let userPokemon = this.state.userPokemon;\n      for (let i = 0; i < user.length; i++) {\n        if (user[i].id === this.state.userPokemon.id) {\n          index = i;\n        }\n      }\n      user.splice(index, 1);\n      const passData = {\n        current_health: 0,\n      };\n      if (this.state.user.length === 0) {\n        this.setState({ battle: true });\n        setTimeout(\n          function () {\n            this.props.saySomething(\n              \"YOU LOST... Go head to Pokecenter and heal those poor pokemons then try again\"\n            );\n            this.setState({\n              battle: true,\n              userPokemon: { ...this.state.userPokemon, current_health: 0 },\n            });\n          }.bind(this),\n          2500\n        );\n        const resp = await update(this.state.userPokemon.id, passData);\n      } else {\n        userPokemon = user[0];\n        const userMoves = await getMoves(userPokemon.id);\n        this.setState({ userMoves });\n        setTimeout(\n          function () {\n            this.setState({\n              user,\n              userPokemon,\n              formData: { ...this.state.formData, current_health: 0 },\n              win: true,\n              battle: false,\n            });\n          }.bind(this),\n          2500\n        );\n      }\n      // setTimeout(\n      //   function () {\n      //     this.setState({\n      //       user,\n      //       userPokemon,\n      //       formData: { ...this.state.formData, current_health: 0 },\n      //       win: true,\n      //       battle: false,\n      //     });\n      //   }.bind(this),\n      //   2500\n      // );\n    } else {\n      const passData = {\n        current_health: userHealth,\n      };\n      setTimeout(\n        function () {\n          this.setState({\n            userPokemon: {\n              ...this.state.userPokemon,\n              current_health: userHealth,\n            },\n            formData: { ...this.state.formData, current_health: userHealth },\n            npcPokemon: { ...this.state.npcPokemon, current_health: npcHealth },\n            battle: false,\n          });\n        }.bind(this),\n        2500\n      );\n      const resp = await update(id, passData);\n    }\n  };\n\n  change = async (pokemon) => {\n    const fighterPokemonID = this.state.userPokemon.id;\n    const formData = this.state.formData;\n    const id = pokemon.id;\n    let randomNpcAttack = this.randomFunc(this.state.npcMoves);\n    let npcAttack = randomNpcAttack.attack;\n    let npcAnimation = randomNpcAttack.animation;\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation, npcTurn: true });\n      }.bind(this),\n      2500\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      5000\n    );\n\n    const changedPokemon = await getPokemon(id);\n    this.props.saySomething(\n      `Trainer ${localStorage.getItem(\"name\")} switches ${\n        this.state.userPokemon.name\n      } with ${changedPokemon.name}`\n    );\n    let userHealth = changedPokemon.current_health;\n    userHealth = userHealth - npcAttack;\n    const passData = {\n      current_health: userHealth,\n    };\n    const resp = await update(id, passData);\n    const userPokemon = await getPokemon(id);\n\n    const resp1 = await update(fighterPokemonID, formData);\n\n    const userMoves = await getMoves(id);\n    setTimeout(\n      function () {\n        this.setState({ battle: false });\n      }.bind(this),\n      5000\n    );\n\n    this.setState({\n      userPokemon,\n      userMoves,\n      formData: {\n        current_health: userHealth,\n      },\n      battle: true,\n    });\n  };\n\n  firstPokemon = (id) => {\n    const user = this.state.user;\n    const userPokemon = user[id];\n    this.props.saySomething(\n      `${userPokemon.name} is fully healed and is now your first pokemon!`\n    );\n    this.setState({ userPokemon });\n  };\n\n  anotherTip = () => {\n    let tip = this.state.tips;\n    let currentTip = tip[Math.floor(Math.random() * tip.length)];\n    this.props.saySomething(\n      \"PATIENCE IS A VIRTUE, kindly refrain from clicking.\"\n    );\n    this.setState({ currentTip });\n  };\n\n  render() {\n    return (\n      <div className=\"league\">\n        {this.state.introChamp && (\n          <div className=\"intro\">\n            <img\n              className=\"introImg\"\n              src=\"https://images.vexels.com/media/users/3/167800/isolated/preview/56e1ce3c2620450dbe33c185c751723a-king-sword-crown-mantle-silhouette-by-vexels.png\"\n            />\n            <p>Champion is ready for you... Good luck!</p>\n          </div>\n        )}\n        <></>\n        {!this.state.isStart && (\n          <div className=\"league1\">\n            {this.state.ready && (\n              <div>\n                {this.state.gymLeader.length > 0 ? (\n                  <div className=\"opponent\">\n                    <img src={this.state.gymLeader[0].image} />\n                    <div className=\"opponent1\">\n                      <h5 className=\"tips\">{this.state.gymLeader[0].name}</h5>\n                      {this.state.gymLeader && (\n                        <div>\n                          {this.state.gymLeader[0].pokemon.map((pokemon) => (\n                            <img src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\" />\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"opponent\">\n                    <img src={this.state.eliteFour[0].image} />\n                    <h5 className=\"tips\">{this.state.eliteFour[0].name}</h5>\n                  </div>\n                )}\n                <div>\n                  <button\n                    className=\"register\"\n                    onClick={() => this.battleStart()}\n                  >\n                    PROCEED\n                  </button>\n                </div>\n                <div>\n                  <p className=\"tips\">\n                    Click on pokemon to heal them. The pokemon that is clicked\n                    last will be the first pokemon in battle!\n                  </p>\n                  {this.state.user.map((pokemon, index) => (\n                    <img\n                      onClick={() => this.firstPokemon(index)}\n                      src={pokemon.frontImage}\n                    />\n                  ))}\n                </div>\n                <div>\n                  <img\n                    className=\"pokemon\"\n                    src={this.state.userPokemon.frontImage}\n                  />\n                </div>\n              </div>\n            )}\n            {!this.state.ready && (\n              <div className=\"opening\">\n                <img\n                  className=\"loading\"\n                  src=\"https://media0.giphy.com/media/HU51xqIWYIumk/source.gif\"\n                />\n                {this.state.currentTip && (\n                  <button className=\"tips\" onClick={() => this.anotherTip()}>\n                    {this.state.currentTip}\n                  </button>\n                )}\n                {this.state.user && (\n                  <div>\n                    {this.state.user.map((pokemon) => (\n                      <img src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\" />\n                    ))}\n                    <p className=\"tips\">\n                      Your pokemons are ready... You'll meet your opponent in a\n                      few sec.\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {this.state.isChamp && (\n          <Outcome\n            result={this.state.userWin}\n            pokemon={this.state.user}\n            champ={this.state.champion}\n          />\n        )}\n\n        {this.state.npcPokemon && (\n          <div className=\"npc\">\n            <div>\n              {this.state.userAnimation && (\n                <img className=\"userFX\" src={this.state.userAnimation} />\n              )}\n\n              <div>\n                <div className=\"npcA\">\n                  <div className=\"npcB\">\n                    <span>\n                      LV{this.state.npcPokemon.level}\n                      {this.state.npcPokemon.name}\n                    </span>\n                    <div className=\"hpBar\">\n                      {!this.state.introChamp && (\n                        <MaxHealthBar\n                          percentage={this.state.npcPokemon.current_health}\n                        />\n                      )}\n                      <div>\n                        {this.state.npcPokemon.current_health}/\n                        {this.state.npcPokemon.health}\n                      </div>\n                      <div className=\"npcPokeball\">\n                        {this.state.npc.map((data, index) => (\n                          <div key={index}>\n                            <img\n                              onClick={() => this.change(data)}\n                              src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"testNpc\">\n                    {this.state.npcPokemon.current_health !== 0 ? (\n                      <img\n                        className={\n                          this.state.npcTurn ? \"npcMove\" : \"npcPokemon\"\n                        }\n                        src={this.state.npcPokemon.frontImage}\n                      />\n                    ) : (\n                      <img\n                        className=\"npcPokemonFade\"\n                        src={this.state.npcPokemon.frontImage}\n                      />\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"space\">\n                  {!this.state.battle && (\n                    <button\n                      className=\"register1\"\n                      onClick={() => this.battleSequence()}\n                    >\n                      FIGHT\n                    </button>\n                  )}\n                </div>\n                <div>\n                  <div className=\"userA\">\n                    <div className=\"testUser\">\n                      {this.state.npcAnimation && (\n                        <img className=\"npcFX\" src={this.state.npcAnimation} />\n                      )}\n\n                      {this.state.userPokemon.current_health > 0 ? (\n                        <img\n                          className={\n                            this.state.userTurn ? \"userMove\" : \"userPokemon\"\n                          }\n                          src={this.state.userPokemon.backImage}\n                        />\n                      ) : (\n                        <img\n                          className=\"userPokemonFade\"\n                          src={this.state.userPokemon.backImage}\n                        />\n                      )}\n                    </div>\n                    {this.state.userPokemon && (\n                      <div className=\"userB\">\n                        {console.log(this.state.userPokemon)}\n                        <span>\n                          LV{this.state.userPokemon.level}\n                          {this.state.userPokemon.name}\n                        </span>\n                        {!this.state.introChamp && (\n                          <>\n                            <div className=\"hpBar\">\n                              <MaxHealthBar\n                                percentage={\n                                  this.state.userPokemon.current_health\n                                }\n                              />\n                              <div>\n                                {this.state.userPokemon.current_health}/\n                                {this.state.userPokemon.health}\n                              </div>\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {!this.state.introChamp && (\n                  <div className=\"sparePokemons\">\n                    {this.state.userPokemon.current_health > 0 && (\n                      <>\n                        {this.state.user.map((data, index) => (\n                          <div key={index}>\n                            <img\n                              onClick={() => this.change(data)}\n                              src={this.state.user[index].frontImage}\n                            />\n                          </div>\n                        ))}\n                      </>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default League;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { trainerPokemon } from \"../services/api_helper\";\n\nimport {\n  getMoves,\n  getPokemon,\n  addMoves,\n  storePokemon,\n} from \"../services/api_helper\";\n\nclass Captured extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: null,\n      userPokemon: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let pokemon = await trainerPokemon();\n    let userPokemon = pokemon.pop();\n    this.props.saySomething(`You've added a new pokemon into your team!`);\n    this.setState({ pokemon, userPokemon });\n  };\n\n  firstPokemon = (id) => {\n    const user = this.state.pokemon;\n    const userPokemon = user[id];\n    this.props.saySomething(\n      `${userPokemon.name} a ${userPokemon.type} type pokemon!`\n    );\n    this.setState({ userPokemon });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemon && (\n          <div className=\"newPokemon\">\n            <div>\n              <img\n                className=\"pokemon\"\n                src={this.state.userPokemon.frontImage}\n              />\n            </div>\n            <div className=\"newPokemon1\">\n              {this.state.pokemon.map((pokemon, index) => (\n                <img\n                  onClick={() => this.firstPokemon(index)}\n                  src={pokemon.frontImage}\n                />\n              ))}\n            </div>\n            <p className=\"tips\">\n              Click the pokeball menu button to the left when you're ready!\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Captured);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport {\n  loginUser,\n  getAllPokemon,\n  userData,\n  verifyUser,\n  registerUser,\n} from \"./services/api_helper\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport { IoMdLogOut } from \"react-icons/fa\";\n\nimport Forest from \"./components/Forest\";\nimport Pokedex from \"./components/Pokedex\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport StartGame from \"./components/StartGame\";\nimport Trainer from \"./components/Trainer\";\nimport Pokecenter from \"./components/Pokecenter\";\nimport League from \"./components/League\";\nimport Menu from \"./components/Menu\";\nimport Captured from \"./components/Captured\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trainername: null,\n      id: null,\n      currentUser: null,\n      formData: {\n        username: null,\n        password: null,\n      },\n      pokemons: null,\n      isClicked: false,\n      instruction: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    verifyUser();\n    console.log(this.state.currentUser);\n    if (localStorage.getItem(\"authToken\")) {\n      const username = localStorage.getItem(\"username\");\n      const user = { username };\n      const id = localStorage.getItem(\"id\");\n      user &&\n        this.setState({\n          currentUser: user,\n          id,\n        });\n    }\n  };\n\n  // checkMoves = async id => {\n  //   id++;\n  //   const resp = await axios.get(`http://localhost:3001/pokemons/${id}/moves`);\n  //   const moves = resp.data.moves;\n  //   this.setState({ moves });\n  //   console.log(this.state.moves);\n  // };\n\n  handleRegister = async (e, registerData) => {\n    e.preventDefault();\n    console.log(registerData);\n    const regData = await registerUser(registerData);\n    // const trainername = regData.username;\n    console.log(regData);\n    // const password = regData.password;\n    // const formData = this.state.regData;\n    // const id = this.state.id;\n    // this.reloadReg(trainername, password);\n    const currentUser = regData;\n    console.log(currentUser);\n    this.setState({\n      currentUser,\n      trainername: currentUser.username,\n    });\n\n    this.props.history.push(\"/start\");\n  };\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    const id = currentUser.id;\n    const trainername = currentUser.username;\n    this.setState({ currentUser, trainername, id });\n    this.props.history.push(\"/start\");\n  };\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null,\n    });\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"id\");\n    this.props.history.push(\"/\");\n  };\n\n  handleMenu = () => {\n    this.props.history.push(\"/menu\");\n  };\n\n  turnOn = () => {\n    this.setState({ isClicked: true });\n  };\n\n  saySomething = (instruction) => {\n    this.setState({ instruction });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {!this.state.currentUser && (\n            <div className=\"opening\">\n              <h2 className=\"title\">POKEMON LEAGUE</h2>\n              <div className=\"buttonsOpenning\">\n                <Link className=\"register\" to=\"/users/register\">\n                  REGISTER\n                </Link>\n                <Route\n                  path=\"/users/register\"\n                  render={() => (\n                    <RegisterForm\n                      handleRegister={this.handleRegister}\n                      isClicked={this.state.isClicked}\n                    />\n                  )}\n                />\n                <Link className=\"register\" to=\"/users/login\">\n                  LOGIN\n                </Link>\n                <Route\n                  path=\"/users/login\"\n                  render={() => (\n                    <LoginForm\n                      isClicked={this.state.isClicked}\n                      handleLogin={this.handleLogin}\n                    />\n                  )}\n                />\n              </div>\n            </div>\n          )}\n          {this.state.currentUser && (\n            <div className=\"header\">\n              <img\n                className=\"home\"\n                src=\"https://www.nicepng.com/png/detail/15-158271_pokeball-icon.png\"\n                onClick={() => this.handleMenu()}\n              />\n              <p className=\"title\">POKEMON LEAGUE</p>\n              <img\n                className=\"logout\"\n                src=\"https://www.netclipart.com/pp/m/399-3996034_transparent-background-logout-icon-png.png\"\n                onClick={() => this.handleLogout()}\n              />\n            </div>\n          )}\n        </div>\n\n        <div className=\"main\">\n          <Route\n            path=\"/league\"\n            render={() => <League saySomething={(e) => this.saySomething(e)} />}\n          />\n          <Route\n            path=\"/forest\"\n            render={() => <Forest saySomething={(e) => this.saySomething(e)} />}\n          />\n          <Route\n            path=\"/start\"\n            render={() => (\n              <StartGame\n                saySomething={(e) => this.saySomething(e)}\n                instruction={this.state.instruction}\n              />\n            )}\n          />\n          <Route\n            path=\"/menu\"\n            render={() => <Menu saySomething={(e) => this.saySomething(e)} />}\n          />\n          <Route\n            path=\"/trainer\"\n            render={() => (\n              <Trainer\n                trainername={this.state.trainername}\n                saySomething={(e) => this.saySomething(e)}\n              />\n            )}\n          />\n          <Route\n            path=\"/newPokemon\"\n            render={() => (\n              <Captured saySomething={(e) => this.saySomething(e)} />\n            )}\n          />\n          <Route\n            path=\"/pokecenter\"\n            render={() => (\n              <Pokecenter saySomething={(e) => this.saySomething(e)} />\n            )}\n          />\n        </div>\n        <>\n          {this.state.currentUser && (\n            <>\n              {this.state.instruction && (\n                <div className=\"footer\">\n                  <p>{this.state.instruction}</p>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}