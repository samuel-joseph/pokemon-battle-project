{"version":3,"sources":["services/api_helper.js","components/Level.js","components/Evolution.js","components/Pokecenter.js","components/healthBar.js","components/maxHealthBar.js","components/Battle.js","components/Forest.js","components/Pokedex.js","components/RegisterForm.js","components/LoginForm.js","components/ChooseStarter.js","components/Trainer.js","components/Menu.js","components/StartGame.js","components/Outcome.js","components/League.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","loginUser","loginData","a","post","resp","localStorage","setItem","data","token","defaults","headers","common","authorization","console","log","user","username","trainername","id","registerUser","registerData","getChampion","get","newChampion","postData","put","verifyUser","getItem","getAllPokemon","pokemons","storePokemon","pokemon","trainerPokemon","getMoves","moves","ownedPokemon","addMoves","moveData","getPokemon","update","remove","delete","removeMove","pokemonId","moveId","useAdvantage","answer","use","i","length","j","type","typeAdvantage","push","move","Level","props","componentDidMount","state","Component","Evolution","withRouter","prevPokemon","saySomething","name","num","frontImage","match","map","Number","evolvePokemon","health","current_health","backImage","fullyEvolved","del","testMoves","newMoves","passData","current_experience","setState","postMoveCopy","attack","animation","resp2","evolve","isClick","setTimeout","this","movesLoad","bind","index","splice","testMovesF","className","src","onClick","key","e","Pokecenter","heal","fullHp","isClicked","show","formData","HealthBar","percentage","style","width","MaxHealthBar","Battle","npc","pokemonID","userPokemon","fighterPokemon","npcAttack","userPokemonAttacks","total_experience","level","count","prevState","postMove","evolution","userHealth","presetXP","gain","rank","Math","floor","battleSequence","battle","levelUser","levelNpc","typeUser","typeNpc","npcHealth","randomNpcAttack","randomFunc","npcAdvantage","npcAnimation","randomUserAttack","userAdvantage","userAttack","userAnimation","effective","userTurn","npcTurn","pop","win","setToTrue","catch","readyCatch","totalHp","chance","change","fighterPokemonID","changedPokemon","arrayPostMoves","rip","random","Forest","resetMap","forestPokemons","arrayPokemons","chosenPokemon","proceed","routeMaps","image","Pokedex","checkMoves","RegisterForm","handleChange","target","value","password","errorText","onSubmit","handleRegister","htmlFor","onChange","LoginForm","handleLogin","ChooseStarter","starters","starterMoves","resp1","riolu","rioluMoves","chosenPokemonId","moveData1","moveData2","passMoves","savePokemon","history","ownPokemon","arrayMoveData","Trainer","showPokemon","isFree","regards","showMoves","class","Menu","champion","to","StartGame","Outcomes","League","gymLeader","eliteFour","gymLeaderCopy","JSON","parse","stringify","eliteFourCopy","array","userHealed","userMoves","idChamp","newNpc","enemy","npcContainer","shift","message","npcPokemon","npcMoves","currentNpc","isStart","userWin","finalMatch","battleStart","champ","formerChamp","isChamp","firstPokemon","Outcome","result","App","currentUser","preventDefault","regData","handleLogout","removeItem","handleMenu","turnOn","instruction","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error"],"mappings":"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","file":"static/js/main.7d27ff17.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  // baseURL: \"http://localhost:3001\",\n  baseURL: \"https://mysterious-chamber-56831.herokuapp.com/\",\n});\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post(\"/users/login\", loginData);\n  localStorage.setItem(\"authToken\", resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  console.log(resp.data.token);\n  localStorage.setItem(\"name\", resp.data.user.username);\n  localStorage.setItem(\"trainername\", resp.data.trainername);\n  localStorage.setItem(\"id\", resp.data.user.id);\n  console.log(resp.data.user);\n  return resp.data.user;\n};\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post(\"/users/register\", registerData);\n  console.log(resp.data.token);\n  localStorage.setItem(\"authToken\", resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  localStorage.setItem(\"authToken\", resp.data.token);\n  localStorage.setItem(\"name\", resp.data.user.username);\n  // localStorage.setItem(\"trainername\", resp.data.user.trainername);\n  localStorage.setItem(\"id\", resp.data.user.id);\n  console.log(resp);\n  return resp.data.user;\n};\n\nexport const getChampion = async () => {\n  const resp = await api.get(\"/users/champion\");\n  return resp.data[0];\n};\n\nexport const newChampion = async (id, postData) => {\n  const resp = await api.put(`/users/${id}`, postData);\n  return;\n};\n\nexport const getAllTrainer = async () => {\n  const resp = await api.post(\"/users/all\");\n  return resp;\n};\n\nexport const verifyUser = () => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n  }\n};\n\nexport const userData = async () => {\n  const resp = await api.get(\"users/verify\");\n  console.log(resp);\n  return resp;\n};\n\nexport const getAllPokemon = async () => {\n  const resp = await api.get(\"pokemons/pokedex\");\n  return resp.data.pokemons;\n};\n\nexport const storePokemon = async (postData) => {\n  let pokemon = await api.post(\"/pokemons\", postData);\n  console.log(pokemon);\n  console.log(\"pokemon stored\");\n  return pokemon;\n};\n\nexport const trainerPokemon = async () => {\n  let resp = await api.get(\"pokemons/trainer\");\n  console.log(resp.data.pokemons);\n  return resp.data.pokemons;\n};\n\nexport const getMoves = async (id) => {\n  let resp = await api.get(`/pokemons/${id}/moves`);\n  console.log(resp);\n  return resp.data.moves;\n};\n\nexport const ownedPokemon = async (id) => {\n  let resp = await api.get(`/pokemons/trainer/${id}`);\n  return resp;\n};\n\nexport const addMoves = async (id, moveData) => {\n  let resp = await api.post(`/pokemons/${id}/moves`, moveData);\n  console.log(resp);\n  return resp;\n};\n\nexport const getPokemon = async (id) => {\n  const resp = await api.get(`/pokemons/${id}`);\n  return resp.data.pokemon;\n};\n\nexport const update = async (id, postData) => {\n  const resp = await api.put(`/pokemons/${id}`, postData);\n  return;\n};\n\nexport const remove = async (id) => {\n  const resp = await api.delete(`/pokemons/${id}`);\n  return;\n};\n\nexport const removeMove = async (pokemonId, moveId) => {\n  console.log(pokemonId);\n  console.log(moveId);\n  const resp = await api.delete(`/pokemons/${pokemonId}/moves/${moveId}`);\n  console.log(\"MOVE REMOVED\");\n  return;\n};\n\nexport const useAdvantage = (moves, pokemon) => {\n  console.log(moves);\n  let answer = null;\n  let use = [];\n  for (let i = 0; i < moves.length; i++) {\n    let j = moves[i].type;\n    let k = typeAdvantage(j, pokemon);\n\n    if (k === 2) answer = j;\n  }\n  if (!answer) {\n    for (let i = 0; i < moves.length; i++) {\n      let j = moves[i].type;\n      let k = typeAdvantage(j, pokemon);\n\n      if (k === 1) answer = j;\n    }\n  }\n  if (answer) {\n    for (let i = 0; i < moves.length; i++) {\n      if (moves[i].type === answer) {\n        use.push(moves[i]);\n      }\n    }\n    return use;\n  } else return moves;\n};\n\nexport const typeAdvantage = (move, pokemon) => {\n  switch (move) {\n    case \"Dragon\":\n      switch (pokemon) {\n        case \"Dragon\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Ghost\":\n      switch (pokemon) {\n        case \"Normal\":\n          return 0;\n        case \"Psychic\":\n          return 0;\n        case \"Ghost\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Rock\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Ice\":\n          return 0.5;\n        case \"Fighting\":\n          return 0.5;\n        case \"Flying\":\n          return 2;\n        case \"Ground\":\n          return 0.5;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Bug\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Fighting\":\n          return 0.5;\n        case \"Poison\":\n          return 2;\n        case \"Flying\":\n          return 0.5;\n        case \"Psychic\":\n          return 2;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Psychic\":\n      switch (pokemon) {\n        case \"Fighting\":\n          return 2;\n        case \"Poison\":\n          return 2;\n        case \"Psychic\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Flying\":\n      switch (pokemon) {\n        case \"Electric\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Fighting\":\n          return 2;\n        case \"Bug\":\n          return 2;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Ground\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Electric\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 2;\n        case \"Flying\":\n          return 0;\n        case \"Bug\":\n          return 0.5;\n        case \"Rock\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Poison\":\n      switch (pokemon) {\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Ground\":\n          return 0.5;\n        case \"Bug\":\n          return 2;\n        case \"Rock\":\n          return 0.5;\n        case \"Ghost\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Fighting\":\n      switch (pokemon) {\n        case \"Normal\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Psychic\":\n          return 0.5;\n        case \"Flying\":\n          return 0.5;\n        case \"Bug\":\n          return 0.5;\n        case \"Rock\":\n          return 2;\n        case \"Ghost\":\n          return 0;\n        default:\n          return 1;\n      }\n    case \"Ice\":\n      switch (pokemon) {\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Flying\":\n          return 2;\n        case \"Dragon\":\n          return 2;\n        default:\n          return 1;\n      }\n    case \"Grass\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Water\":\n          return 2;\n        case \"Grass\":\n          return 0.5;\n        case \"Poison\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Flying\":\n          return 0.5;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Electric\":\n      switch (pokemon) {\n        case \"Water\":\n          return 2;\n        case \"Electric\":\n          return 0.5;\n        case \"Grass\":\n          return 0.5;\n        case \"Ground\":\n          return 0;\n        case \"Flying\":\n          return 2;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Water\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 2;\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 0.5;\n        case \"Ground\":\n          return 2;\n        case \"Rock\":\n          return 2;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Fire\":\n      switch (pokemon) {\n        case \"Fire\":\n          return 0.5;\n        case \"Water\":\n          return 0.5;\n        case \"Grass\":\n          return 2;\n        case \"Ice\":\n          return 2;\n        case \"Bug\":\n          return 2;\n        case \"Rock\":\n          return 0.5;\n        case \"Dragon\":\n          return 0.5;\n        default:\n          return 1;\n      }\n    case \"Normal\":\n      switch (pokemon) {\n        case \"Rock\":\n          return 0.5;\n        case \"Ghost\":\n          return 0;\n        default:\n          return 1;\n      }\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport { trainerPokemon } from \"../services/api_helper\";\n\nclass Level extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: []\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemon = await trainerPokemon();\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\nexport default withRouter(Level);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  update,\n  getPokemon,\n  removeMove,\n  addMoves\n} from \"../services/api_helper\";\n\nclass Evolution extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: null,\n      prevPokemon: null,\n      isClick: false,\n      moves: null,\n      movesLoad: false,\n      testMoves: null,\n      testMovesF: null\n    };\n  }\n\n  componentDidMount = async () => {\n    let prevPokemon = this.props.pokemon;\n    this.props.saySomething(`Your ${prevPokemon.name} is about to evolve!!!`);\n    let num = prevPokemon.frontImage.match(/\\d+/g).map(Number);\n    let id = prevPokemon.id;\n\n    num++;\n    let evolvePokemon = await getPokemon(num);\n    let type = evolvePokemon.type;\n    let name = evolvePokemon.name;\n    let health = evolvePokemon.health;\n    let current_health = evolvePokemon.current_health;\n    let frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n    let backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n    let fullyEvolved = evolvePokemon.fullyEvolved;\n    let resp = await getMoves(num);\n    let del = await getMoves(id);\n    let testMoves = [];\n    for (let i = 0; i < del.length; i++) {\n      await removeMove(id, del[i].id);\n    }\n    for (let i = 0; i < resp.length; i++) {\n      testMoves.push(resp[i]);\n      this.newMoves(resp[i], id);\n    }\n    console.log(testMoves);\n\n    const passData = {\n      name,\n      health,\n      current_health,\n      current_experience: 0,\n      fullyEvolved,\n      frontImage,\n      backImage,\n      type\n    };\n    const resp1 = await update(id, passData);\n    let pokemon = await getPokemon(id);\n    this.setState({ pokemon, prevPokemon, testMoves });\n  };\n\n  newMoves = async (moves, id) => {\n    let postMoveCopy = {\n      name: moves.name,\n      attack: moves.attack,\n      animation: moves.animation,\n      type: moves.type\n    };\n\n    let resp = await addMoves(id, postMoveCopy);\n    let resp2 = await getMoves(id);\n    this.setState({ moves: resp2 });\n  };\n\n  evolve = () => {\n    let id = this.props.pokemon;\n    this.setState({ isClick: true });\n    // let moves = await getMoves(id);\n    setTimeout(\n      function() {\n        if (this.state.moves.length > 4) {\n          this.props.saySomething(\n            `CONGRATULATIONS! Your ${\n              this.state.prevPokemon.name\n            } evolved into ${this.state.pokemon.name}! However, ${\n              this.state.pokemon.name\n            } have more than 4 moves, delete ${this.state.moves.length -\n              4} to continue!`\n          );\n        } else {\n          this.props.saySomething(\n            `CONGRATULATIONS! Your ${this.state.prevPokemon.name} evolved into ${this.state.pokemon.name}!`\n          );\n        }\n        this.setState({ movesLoad: true });\n      }.bind(this),\n      5000\n    );\n  };\n\n  delete = async (index, move) => {\n    console.log(move);\n    let id = this.props.pokemon.id;\n    let moves = this.state.moves;\n    moves.splice(index, 1);\n    if (this.state.moves.length > 4) {\n      this.props.saySomething(\n        `${move.name} is removed from ${\n          this.state.pokemon.name\n        }. ${moves.length - 4} more!`\n      );\n    } else {\n      this.props.saySomething(\n        `Thank you Trainer ${localStorage.getItem(\"name\")}!`\n      );\n    }\n\n    this.setState({ moves });\n    const resp = await removeMove(id, move.id);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemon && (\n          <div className=\"evolveContainer\">\n            {/* {this.state.testMoves && <>{console.log(this.state.testMoves)}</>} */}\n            {this.state.isClick && (\n              <img className=\"evolved\" src={this.state.pokemon.frontImage} />\n            )}\n            {console.log(this.state.moves)}\n            <img\n              className={this.state.isClick ? \"faded\" : \"prevPokemon\"}\n              src={this.state.prevPokemon.frontImage}\n            />\n            {!this.state.isClick && (\n              <button onClick={() => this.evolve()}>PROCEED</button>\n            )}\n            <div className={this.state.movesLoad ? \"evolveMoves\" : \"\"}>\n              {this.state.movesLoad &&\n                this.state.moves.map((move, index) => (\n                  <div key={index} className=\"evolveMovesA\">\n                    <div>{move.name}</div>\n                    <div>{move.attack}</div>\n                    {this.state.moves.length > 4 && (\n                      <button\n                        className=\"deleteMove\"\n                        onClick={e => this.delete(index, move)}\n                      >\n                        DEL\n                      </button>\n                    )}\n                  </div>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Evolution;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport {\n  update,\n  trainerPokemon,\n  ownedPokemon,\n  getPokemon\n} from \"../services/api_helper\";\n\nclass Pokecenter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      pokemon: [],\n      formData: {\n        current_health: null\n      },\n      isClicked: false\n    };\n  }\n\n  componentDidMount = async () => {\n    const user = await trainerPokemon();\n    this.setState({ user });\n    console.log(user);\n  };\n\n  heal = async () => {\n    const user = this.state.user;\n    for (let i = 0; i < user.length; i++) {\n      let id = user[i].id;\n      let fullHp = user[i].health;\n      let passData = {\n        current_health: fullHp\n      };\n      const regainHp = await update(id, passData);\n    }\n    this.setState({ isClicked: true });\n  };\n\n  show = async id => {\n    const pokemon = [];\n    const resp = await getPokemon(id);\n    pokemon.push(resp);\n    console.log(pokemon);\n    this.setState({ pokemon });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.user && (\n          <div className=\"pokecenter0\">\n            {this.state.isClicked ? (\n              this.state.user.map(data => (\n                <img className=\"pokeAtCenter\" src={data.frontImage} />\n              ))\n            ) : (\n              <div className=\"pokecenter\">\n                {this.state.user.map(data => (\n                  <div className=\"pokecenter1\">\n                    <img\n                      className=\"healPoke\"\n                      onClick={() => this.show(data.id)}\n                      src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        {!this.state.isClicked && (\n          <button className=\"register\" onClick={() => this.heal()}>\n            HEAL\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Pokecenter);\n","import React from \"react\";\n\nconst HealthBar = props => {\n  return (\n    <div\n      className={props.percentage <= 40 ? \"danger\" : \"healthbar\"}\n      style={{ width: `${props.percentage}%` }}\n    />\n  );\n};\n\nexport default HealthBar;\n","import React from \"react\";\nimport HealthBar from \"./healthBar\";\n\nconst MaxHealthBar = props => {\n  return (\n    <div className=\"maxhealthbar\">\n      <HealthBar percentage={props.percentage} />\n    </div>\n  );\n};\n\nexport default MaxHealthBar;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  update,\n  storePokemon,\n  addMoves,\n  ownedPokemon,\n  getPokemon,\n  removeMove,\n  typeAdvantage,\n  useAdvantage,\n} from \"../services/api_helper\";\n\nimport Level from \"./Level\";\nimport Evolution from \"./Evolution\";\nimport Pokecenter from \"./Pokecenter\";\nimport MaxHealthBar from \"./maxHealthBar\";\nimport { FaSketch } from \"react-icons/fa\";\n\nclass Battle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      npc: [],\n      npcAnimation: null,\n      userAnimation: null,\n      postData: {\n        name: null,\n        frontImage: null,\n        backImage: null,\n        health: null,\n        current_health: null,\n        type: null,\n      },\n      postMove: [],\n      arrayPostMoves: [],\n      npcAttack: null,\n      userPokemon: null,\n      userPokemonAttacks: null,\n      fighterPokemon: [],\n      catch: false,\n      change: false,\n      formData: {\n        current_health: null,\n      },\n      win: false,\n      npcTurn: false,\n      userTurn: false,\n      count: null,\n      battle: false,\n      evolve: false,\n      rip:\n        \"https://b7.pngbarn.com/png/250/103/headstone-grave-cemetery-rest-in-peace-grave-s-png-clip-art-thumbnail.png\",\n    };\n  }\n\n  componentDidMount = async () => {\n    const npc = this.props.pokemonID;\n    const userPokemon = await trainerPokemon();\n    const fighterPokemon = userPokemon[0];\n    const npcAttack = await getMoves(npc.id);\n    const userPokemonAttacks = await getMoves(fighterPokemon.id);\n    console.log(userPokemonAttacks);\n    const name = npc.name;\n    const current_experience = npc.current_experience;\n    const total_experience = npc.total_experience;\n    const level = npc.level;\n    const frontImage = npc.frontImage;\n    const backImage = npc.backImage;\n    const health = npc.health;\n    const fullyEvolved = npc.fullyEvolved;\n    const moveName = npcAttack.name;\n    const moveAttack = npcAttack.attack;\n    const current_health = npc.current_health;\n    const type = npc.type;\n    let count = null;\n    if (userPokemon.length < 6) {\n      count = 3;\n    } else {\n      count = 0;\n    }\n    console.log(count);\n\n    this.setState({\n      count,\n      npc,\n      userPokemon,\n      fighterPokemon,\n      npcAttack,\n      userPokemonAttacks,\n      postData: {\n        name,\n        frontImage,\n        backImage,\n        health,\n        current_health,\n        level,\n        total_experience,\n        current_experience,\n        fullyEvolved,\n        type,\n      },\n      formData: {\n        current_health,\n      },\n    });\n\n    for (let i = 0; i < npcAttack.length; i++) {\n      const postMoveCopy = {\n        name: npcAttack[i].name,\n        attack: npcAttack[i].attack,\n        animation: npcAttack[i].animation,\n        type: npcAttack[i].type,\n      };\n      this.setState((prevState) => ({\n        postMove: [postMoveCopy, ...prevState.postMove],\n      }));\n    }\n  };\n\n  randomFunc(random) {\n    let response = random[Math.floor(Math.random() * random.length)];\n    return response;\n  }\n\n  // newMoves = async (moves, id) => {\n  //   console.log(moves);\n  //   let postMoveCopy = {\n  //     name: moves.name,\n  //     attack: moves.attack,\n  //     animation: moves.animation,\n  //     type: moves.type\n  //   };\n\n  //   let resp = await addMoves(id, postMoveCopy);\n\n  //   console.log(postMoveCopy);\n  // };\n\n  evolution = async () => {\n    let userHealth = this.state.fighterPokemon.current_health;\n    let fullyEvolved = this.state.fighterPokemon.fullyEvolved;\n    let id = this.state.fighterPokemon.id;\n    let total_experience = this.state.fighterPokemon.total_experience;\n    let current_experience = this.state.fighterPokemon.current_experience;\n    let level = this.state.fighterPokemon.level;\n    let health = this.state.fighterPokemon.health;\n    let frontImage = this.state.fighterPokemon.frontImage;\n    let backImage = this.state.fighterPokemon.backImage;\n    let name = this.state.fighterPokemon.name;\n    let type = this.state.fighterPokemon.type;\n    let presetXP = 1000;\n    let gain = null;\n\n    switch (this.props.rank) {\n      case \"low\":\n        gain = Math.floor(presetXP * 2 * (1 + level * 0.075));\n        break;\n      case \"medium\":\n        gain = Math.floor(presetXP * 3 * (1.75 + level * 0.075));\n        break;\n      case \"high\":\n        gain = Math.floor(presetXP * 4);\n        break;\n      case \"bonus\":\n        gain = Math.floor(presetXP * 10 * (1.75 + level * 0.075));\n        break;\n    }\n\n    this.props.saySomething(\n      `${this.state.fighterPokemon.name} earned ${gain} worth experiece!`\n    );\n    current_experience += gain;\n\n    if (level < 50) {\n      while (current_experience >= total_experience) {\n        level++;\n        health += 2;\n        current_experience = current_experience - total_experience;\n        total_experience += 300;\n        if ((level === 15 || level === 30) && fullyEvolved === false) {\n          this.setState({ evolve: true });\n        }\n      }\n    }\n\n    const passData = {\n      // name,\n      health,\n      current_health: userHealth,\n      level,\n      current_experience,\n      current_health: health,\n      total_experience,\n    };\n    console.log(passData);\n    const resp = await update(id, passData);\n  };\n\n  battleSequence = async () => {\n    this.setState({ battle: true });\n    let formData = this.state.formData;\n    let levelUser = this.state.fighterPokemon.level;\n    let levelNpc = this.state.npc.level;\n    let typeUser = this.state.fighterPokemon.type;\n    let typeNpc = this.state.npc.type;\n    let id = this.state.fighterPokemon.id;\n    let npcHealth = this.state.npc.current_health;\n    let halfHp = this.state.npc.health / 2;\n\n    let randomNpcAttack = this.randomFunc(\n      useAdvantage(this.state.npcAttack, typeUser)\n    );\n\n    console.log(this.state.npcAttack);\n    let npcAdvantage = typeAdvantage(\n      randomNpcAttack.type,\n      this.state.fighterPokemon.type\n    );\n    let npcAttack = Math.floor(\n      (randomNpcAttack.attack + randomNpcAttack.attack * levelNpc * 0.01) *\n        npcAdvantage\n    );\n    let npcAnimation = randomNpcAttack.animation;\n\n    let randomUserAttack = this.randomFunc(\n      useAdvantage(this.state.userPokemonAttacks, typeNpc)\n    );\n    console.log(this.state.userPokemonAttacks);\n\n    let userHealth = this.state.fighterPokemon.current_health;\n    let userAdvantage = typeAdvantage(\n      randomUserAttack.type,\n      this.state.npc.type\n    );\n    console.log(userAdvantage);\n\n    let userAttack = Math.floor(\n      (randomUserAttack.attack + randomUserAttack.attack * levelUser * 0.01) *\n        userAdvantage\n    );\n    let userAnimation = randomUserAttack.animation;\n    console.log(randomUserAttack.name);\n\n    let effective = \"\";\n    if (userAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (userAdvantage === 0.5) effective = \"not effective\";\n\n    this.setState({ userAnimation, userTurn: true });\n    this.props.saySomething(\n      `${this.state.fighterPokemon.name} uses ${randomUserAttack.name}! ${effective} deals ${userAttack}!`\n    );\n\n    effective = \"\";\n    if (npcAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (npcAdvantage === 0.5) effective = \"not effective\";\n\n    npcHealth = npcHealth - userAttack;\n    userHealth = userHealth - npcAttack;\n\n    console.log(npcHealth);\n    setTimeout(\n      function () {\n        this.setState({ userAnimation: null, userTurn: false });\n      }.bind(this),\n      1000\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation, npcTurn: true });\n\n        this.props.saySomething(\n          `${this.state.npc.name} uses ${randomNpcAttack.name}! ${effective} deals ${npcAttack}!`\n        );\n      }.bind(this),\n      1000\n    );\n\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2000\n    );\n\n    if (formData.current_health !== userHealth) {\n      this.setState({\n        formData: {\n          current_health: userHealth,\n        },\n      });\n    }\n\n    // if (npcHealth <= 0 && userHealth <= 0) {\n    //   setTimeout(\n    //     function() {\n    //       this.setState({\n    //         npc: { ...this.state.npc, current_health: 0 },\n    //         fighterPokemon: { ...this.state.user, current_health: 0 },\n    //         formData: { ...this.state.formData, current_health: userHealth }\n    //       });\n    //     }.bind(this),\n    //     2000\n    //   );\n    // }\n    if (npcHealth < 0 || npcHealth === 0) {\n      const passData = {\n        current_health: userHealth,\n      };\n      this.setState({\n        npc: { ...this.state.npc, current_health: 0 },\n        formData: { ...this.state.formData, current_health: userHealth },\n      });\n      // let dice = Math.floor(Math.random() * 11);\n\n      const resp = await update(id, passData);\n      this.evolution();\n    } else if (userHealth < 0 || userHealth === 0) {\n      let index = null;\n      const userPokemon = this.state.userPokemon;\n      // userPokemon.splice(index, 1);\n      const fighterPokemon = userPokemon.pop(0);\n      const passData = {\n        current_health: 0,\n      };\n      if (this.state.userPokemon.length === 0) {\n        this.props.saySomething(\n          \"YOU LOST... Go head to Pokecenter and heal those poor pokemons then try again\"\n        );\n        const resp = await update(this.state.fighterPokemon.id, passData);\n      } else {\n        for (let i = 0; i < this.state.userPokemon.length; i++) {\n          if (this.state.userPokemon[i].id === this.state.fighterPokemon.id) {\n            index = i;\n          }\n        }\n      }\n      this.setState({\n        userPokemon,\n        fighterPokemon,\n        formData: { ...this.state.formData, current_health: userHealth },\n        win: true,\n      });\n    } else {\n      const passData = {\n        current_health: userHealth,\n      };\n      setTimeout(\n        function () {\n          this.setState({\n            fighterPokemon: {\n              ...this.state.fighterPokemon,\n              current_health: userHealth,\n            },\n            formData: { ...this.state.formData, current_health: userHealth },\n            npc: { ...this.state.npc, current_health: npcHealth },\n            battle: false,\n          });\n        }.bind(this),\n        2500\n      );\n      const resp = await update(id, passData);\n    }\n  };\n\n  setToTrue = () => {\n    this.setState({ catch: true });\n  };\n\n  storePokemon = async () => {\n    const postData = this.state.postData;\n    const postMove = this.state.postMove;\n    const resp = await storePokemon(postData);\n    for (let i = 0; i < postMove.length; i++) {\n      const resp1 = await addMoves(resp.data.id, postMove[i]);\n    }\n  };\n\n  readyCatch = async () => {\n    let count = this.state.count;\n    count--;\n    this.setState({ catch: true, count });\n    const hp = this.state.npc.current_health;\n    const totalHp = this.state.fighterPokemon.health;\n    const chance = totalHp * 0.1;\n    const dice = 10;\n    // Math.floor(Math.random() * Math.floor(hp));\n    this.props.saySomething(\n      `Trainer ${localStorage.getItem(\"name\")} throws a pokeball!`\n    );\n\n    setTimeout(\n      function () {\n        if (dice <= chance) {\n          this.props.saySomething(`You caught a ${this.state.npc.name}!`);\n          this.storePokemon();\n        } else {\n          this.props.saySomething(\"Your pokeball broke!\");\n          this.setState({ catch: false });\n        }\n      }.bind(this),\n      2000\n    );\n  };\n\n  change = async (pokemon) => {\n    console.log(this.state.formData);\n    const fighterPokemonID = this.state.fighterPokemon.id;\n    const formData = this.state.formData;\n    const id = pokemon.id;\n    let randomNpcAttack = this.randomFunc(this.state.npcAttack);\n    let npcAttack = randomNpcAttack.attack;\n    let npcAnimation = randomNpcAttack.animation;\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation, npcTurn: true });\n      }.bind(this),\n      1500\n    );\n    setTimeout(\n      function () {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2500\n    );\n\n    const changedPokemon = await getPokemon(id);\n    this.props.saySomething(\n      `Trainer ${localStorage.getItem(\"name\")} switches ${\n        this.state.fighterPokemon.name\n      } with ${changedPokemon.name}`\n    );\n    let userHealth = changedPokemon.current_health;\n    userHealth = userHealth - npcAttack;\n    const passData = {\n      current_health: userHealth,\n    };\n    const resp = await update(id, passData);\n    const fighterPokemon = await getPokemon(id);\n\n    const resp1 = await update(fighterPokemonID, formData);\n\n    const userPokemonAttacks = await getMoves(id);\n    setTimeout(\n      function () {\n        this.setState({\n          fighterPokemon,\n          userPokemonAttacks,\n          formData: {\n            current_health: userHealth,\n          },\n          battle: false,\n        });\n      }.bind(this),\n      500\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.userPokemon && (\n          <>\n            {this.state.evolve ? (\n              <Evolution\n                saySomething={(e) => this.props.saySomething(e)}\n                pokemon={this.state.fighterPokemon}\n              />\n            ) : (\n              <>\n                {this.state.userPokemon && (\n                  <div>\n                    {console.log(this.state.count)}\n                    <div className=\"forestBat\">\n                      <div className=\"npc\">\n                        <div>\n                          {this.state.userAnimation && (\n                            <img\n                              className=\"userFX\"\n                              src={this.state.userAnimation}\n                            />\n                          )}\n\n                          <div>\n                            <div className=\"npcA\">\n                              <div className=\"npcB\">\n                                <span>{this.state.npc.name}</span>\n                                <div className=\"hpBar\">\n                                  <MaxHealthBar\n                                    percentage={this.state.npc.current_health}\n                                  />\n                                </div>\n                              </div>\n                              <div>\n                                {this.state.npc.current_health ? (\n                                  <img\n                                    className={\n                                      this.state.npcTurn\n                                        ? \"npcMove\"\n                                        : \"npcPokemon\"\n                                    }\n                                    src={\n                                      this.state.catch\n                                        ? \"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                                        : this.state.npc.frontImage\n                                    }\n                                  />\n                                ) : (\n                                  <img\n                                    className=\"npcPokemonFade\"\n                                    src={this.state.npc.frontImage}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!this.state.battle && (\n                        <>\n                          {this.state.npc.current_health > 0 &&\n                            this.state.fighterPokemon.current_health > 0 && (\n                              <button\n                                className=\"register1\"\n                                onClick={() => this.battleSequence()}\n                              >\n                                FIGHT\n                              </button>\n                            )}\n                        </>\n                      )}\n                      <div>\n                        <div className=\"userA\">\n                          <div>\n                            {this.state.npcAnimation && (\n                              <img\n                                className=\"npcFX\"\n                                src={this.state.npcAnimation}\n                              />\n                            )}\n\n                            {!this.state.fighterPokemon.current_health <= 0 ? (\n                              <img\n                                className={\n                                  this.state.userTurn\n                                    ? \"userMove\"\n                                    : \"userPokemon\"\n                                }\n                                src={\n                                  this.state.fighterPokemon.backImage\n                                    ? this.state.fighterPokemon.backImage\n                                    : this.state.rip\n                                }\n                              />\n                            ) : (\n                              <img\n                                className=\"userPokemon\"\n                                src={this.state.rip}\n                              />\n                            )}\n                          </div>\n                          <div className=\"userB\">\n                            <span>\n                              LV{this.state.fighterPokemon.level}\n                              {this.state.fighterPokemon.name}\n                            </span>\n                            <div className=\"hpBar\">\n                              <MaxHealthBar\n                                percentage={\n                                  this.state.fighterPokemon.current_health\n                                }\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <>\n                      {this.state.userPokemon && (\n                        <div className=\"sparePokemons\">\n                          {this.state.count !== 0 && (\n                            <span>\n                              <>\n                                <img\n                                  className=\"imagePoke1\"\n                                  onClick={() => this.readyCatch()}\n                                  src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                                />\n                                x{this.state.count}\n                              </>\n                            </span>\n                          )}\n                          {this.state.userPokemon.map((data, index) => (\n                            <div key={index}>\n                              <img\n                                onClick={() => this.change(data)}\n                                src={this.state.userPokemon[index].frontImage}\n                              />\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </>\n                  </div>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Battle);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport { getPokemon } from \"../services/api_helper\";\n\nimport Battle from \"./Battle\";\n\nclass Forest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      routeMaps: [\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 1-35\",\n          arrayPokemons: [\n            129,\n            13,\n            16,\n            19,\n            21,\n            29,\n            32,\n            43,\n            46,\n            60,\n            69,\n            129,\n            129,\n          ],\n          rank: \"low\",\n        },\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 36-75\",\n          arrayPokemons: [\n            116,\n            60,\n            58,\n            50,\n            39,\n            35,\n            25,\n            23,\n            23,\n            54,\n            74,\n            100,\n            102,\n            111,\n            118,\n            92,\n            90,\n            120,\n            147,\n          ],\n          rank: \"medium\",\n        },\n        {\n          image:\n            \"https://i.pinimg.com/originals/2a/a2/0b/2aa20b2129a6b56fd02eb2d794a1a689.png\",\n          name: \"Route 75-100\",\n          arrayPokemons: [\n            95,\n            106,\n            107,\n            113,\n            115,\n            114,\n            122,\n            123,\n            124,\n            125,\n            126,\n            127,\n            128,\n            131,\n            135,\n            135,\n            136,\n            140,\n            142,\n            143,\n          ],\n          rank: \"high\",\n        },\n      ],\n      pokemons: [],\n      chosenPokemon: null,\n      isClicked: false,\n      proceed: false,\n      rank: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.saySomething(\n      \" Choose any of the forest then press HUNT button to either catch a pokemon or just battle! HAPPY HUNTING!\"\n    );\n    console.log(this.state.win);\n  };\n\n  resetMap = () => {\n    const pokemons = \"\";\n    this.setState({ pokemons });\n  };\n\n  forestPokemons = async (data) => {\n    console.log(data);\n    const id = data.arrayPokemons;\n    this.resetMap();\n    for (let i = 0; i < id.length; i++) {\n      const pokemons = await getPokemon(id[i]);\n      this.setState({\n        pokemons: [...this.state.pokemons, pokemons],\n        isClicked: true,\n      });\n    }\n    this.setState({ rank: data.rank });\n  };\n\n  battle = () => {\n    const arrayPokemons = this.state.pokemons;\n    const chosenPokemon = this.state.pokemons[\n      Math.floor(Math.random() * Math.floor(arrayPokemons.length - 1))\n    ];\n\n    this.setState({ proceed: true, chosenPokemon });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.proceed ? (\n          <Battle\n            rank={this.state.rank}\n            saySomething={(e) => this.props.saySomething(e)}\n            pokemonID={this.state.chosenPokemon}\n          />\n        ) : (\n          <>\n            <div>\n              <div className=\"forest\">\n                {this.state.routeMaps.map((data) => (\n                  <div className=\".grass\">\n                    <img\n                      className=\"grassImg\"\n                      onClick={() => this.forestPokemons(data)}\n                      src={data.image}\n                    />\n                    <h5>{data.name}</h5>\n                  </div>\n                ))}\n              </div>\n            </div>\n            {this.state.pokemons && (\n              <div className=\"pokemonContainer\">\n                {this.state.pokemons.map((data) => (\n                  <div>\n                    <img className=\"pokemon\" src={data.frontImage} />\n                  </div>\n                ))}\n              </div>\n            )}\n            {this.state.isClicked && (\n              <div>\n                <h4>These are your possible pokemons to catch</h4>\n                <button className=\"register\" onClick={() => this.battle()}>\n                  HUNT\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Forest);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { getAllPokemon } from \"../services/api_helper\";\n\nexport default class Pokedex extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemons: []\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemons = await getAllPokemon();\n    this.setState({ pokemons });\n\n    // let string =\n    //   \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/104.png\";\n\n    // let test = string.match(/\\d+/g).map(Number);\n    // test++;\n    // console.log(\n    //   \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n    //     test +\n    //     \".png\"\n    // );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemons && (\n          <>\n            {this.state.pokemons.map((data, index) => (\n              <div key={index} className=\"desc\">\n                <h4>{data.name}</h4>\n                <img\n                  onClick={() => this.checkMoves(index)}\n                  src={data.frontImage}\n                />\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form\">\n        {this.props.errorText && <p>{this.props.errorText}</p>}\n        <form onSubmit={e => this.props.handleRegister(e, this.state)}>\n          <label htmlFor=\"name\">TRAINERNAME</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            className=\"label\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"password\">PASSWORD</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"label\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"submit\">SUBMIT</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  render() {\n    return (\n      <div className=\"form\">\n        <form onSubmit={e => this.props.handleLogin(e, this.state)}>\n          <label htmlFor=\"username\">TRAINERNAME</label>\n          <input\n            className=\"label\"\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">PASSWORD</label>\n          <input\n            className=\"label\"\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"submit\">SUBMIT</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport {\n  getPokemon,\n  storePokemon,\n  getMoves,\n  addMoves\n} from \"../services/api_helper\";\n\nclass ChooseStarter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ownPokemon: null,\n      chosenPokemonId: null,\n      starters: [],\n      riolu: null,\n      rioluMoves: null,\n      starterMoves: [],\n      arrayMoveData: [],\n      moveData1: {\n        name: null,\n        attack: null,\n        animation: null,\n        type: null\n      },\n      moveData2: {\n        name: null,\n        attack: null,\n        animation: null,\n        type: null\n      },\n      formData: {\n        name: null,\n        frontImage: null,\n        backImage: null,\n        health: null,\n        current_health: null,\n        level: 1,\n        total_experience: 300,\n        current_experience: 0,\n        fullyEvolved: null,\n        type: null\n      },\n      isClicked: false\n    };\n  }\n\n  componentDidMount = async () => {\n    const starters = [];\n    const starterMoves = [];\n    const id = [1, 4, 7];\n    for (let i = 0; i < 3; i++) {\n      const resp = await getPokemon(id[i]);\n      const resp1 = await getMoves(id[i]);\n      starters.push(resp);\n      starterMoves.push(resp1);\n    }\n    const riolu = await getPokemon(152);\n    const rioluMoves = await getMoves(152);\n    console.log(starters);\n    this.props.saySomething(\"Choose a starter pokemon\");\n    this.setState({ starters, starterMoves, riolu, rioluMoves });\n  };\n\n  chosenPokemon = (pokemon, moves) => {\n    console.log(pokemon);\n    console.log(moves);\n    const chosenPokemonId = pokemon.id;\n    const starterMoves = [];\n\n    this.props.saySomething(\" \");\n\n    this.setState({\n      moveData1: {\n        ...this.state.moveData,\n        name: moves[0].name,\n        attack: moves[0].attack,\n        animation: moves[0].animation,\n        type: moves[0].type\n      }\n    });\n    this.setState({\n      moveData2: {\n        ...this.state.moveData,\n        name: moves[1].name,\n        attack: moves[1].attack,\n        animation: moves[1].animation,\n        type: moves[1].type\n      }\n    });\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        name: pokemon.name,\n        frontImage: pokemon.frontImage,\n        backImage: pokemon.backImage,\n        health: pokemon.health,\n        current_health: pokemon.current_health,\n        fullyEvolved: pokemon.fullyEvolved,\n        type: pokemon.type\n      }\n    });\n    this.passMoves(moves);\n\n    this.setState({\n      isClicked: true,\n      chosenPokemonId\n    });\n  };\n\n  passMoves = moves => {\n    this.setState({\n      moveData1: {\n        ...this.state.moveData1,\n        name: moves[0].name,\n        attack: moves[0].attack,\n        animation: moves[0].animation,\n        type: moves[0].type\n      },\n      moveData2: {\n        ...this.state.moveData2,\n        name: moves[1].name,\n        attack: moves[1].attack,\n        animation: moves[1].animation,\n        type: moves[1].type\n      }\n    });\n  };\n\n  savePokemon = async () => {\n    const pokemon = await storePokemon(this.state.formData);\n    console.log(pokemon.data.id);\n    const id = pokemon.data.id;\n    const move1 = await addMoves(id, this.state.moveData1);\n    const move2 = await addMoves(id, this.state.moveData2);\n    this.props.history.push(\"/trainer\");\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.starters && (\n          <div>\n            {this.state.isClicked && (\n              <div className=\"choose\">\n                <img className=\"pokemon\" src={this.state.formData.frontImage} />\n                <p>{this.state.formData.name}</p>\n              </div>\n            )}\n            <div className=\"setPokeball\">\n              {this.state.starters.map((pokemon, index) => (\n                <div key={index}>\n                  <img\n                    className=\"pokeball\"\n                    onClick={() =>\n                      this.chosenPokemon(\n                        pokemon,\n                        this.state.starterMoves[index]\n                      )\n                    }\n                    src=\"https://purepng.com/public/uploads/medium/purepng.com-pokeballpokeballdevicepokemon-ballpokemon-capture-ball-1701527825795vtfp2.png\"\n                  />\n                </div>\n              ))}\n            </div>\n            {this.state.isClicked && (\n              <button className=\"register\" onClick={() => this.savePokemon()}>\n                CONFIRM\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ChooseStarter);\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport {\n  trainerPokemon,\n  getMoves,\n  remove,\n  removeMove\n} from \"../services/api_helper\";\n\nclass Trainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: [],\n      moves: [],\n      showPokemon: {\n        id: null,\n        name: null,\n        frontImage: null,\n        level: null,\n        current_health: null,\n        health: null,\n        current_experience: null,\n        total_experience: null,\n        type: null\n      }\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(localStorage.getItem(\"name\"));\n    const pokemon = await trainerPokemon();\n    const moves = await getMoves(pokemon[0].id);\n    if (pokemon.length === 0) {\n      this.props.history.push(\"/start\");\n    } else {\n      this.props.saySomething(\"Here are your pokemons\");\n      const showPokemon = {\n        id: pokemon[0].id,\n        name: pokemon[0].name,\n        frontImage: pokemon[0].frontImage,\n        level: pokemon[0].level,\n        current_health: pokemon[0].current_health,\n        health: pokemon[0].health,\n        current_experience: pokemon[0].current_experience,\n        total_experience: pokemon[0].total_experience,\n        type: pokemon[0].type\n      };\n      this.setState({ pokemon, showPokemon, moves });\n    }\n  };\n  isFree = async regards => {\n    this.props.saySomething(`Say goodbye to ${regards.name}`);\n    const resp = await remove(regards.id);\n    const pokemon = await trainerPokemon();\n    this.setState({ pokemon });\n  };\n\n  showMoves = async pokemon => {\n    this.props.saySomething(\n      `This is your ${pokemon.name}, you can free your pokemon by pressing FREE button at the buttom.`\n    );\n    const moves = await getMoves(pokemon.id);\n    const frontImage = pokemon.frontImage;\n    const level = pokemon.level;\n    const name = pokemon.name;\n    const health = pokemon.health;\n    const current_health = pokemon.current_health;\n    const current_experience = pokemon.current_experience;\n    const total_experience = pokemon.total_experience;\n    const id = pokemon.id;\n    const type = pokemon.type;\n    console.log(pokemon);\n\n    this.setState({\n      isClicked: true,\n      moves,\n      showPokemon: {\n        ...this.state.showPokemon,\n        id,\n        frontImage,\n        name,\n        level,\n        health,\n        current_experience,\n        total_experience,\n        health,\n        current_health,\n        type\n      }\n    });\n  };\n\n  delete = async (index, move) => {\n    console.log(move);\n    let id = this.props.pokemon.id;\n    let moves = this.state.moves;\n\n    moves.splice(index, 1);\n    this.setState({ moves });\n    const resp = await removeMove(id, move.id);\n  };\n\n  render() {\n    return (\n      <div className=\"typeA\">\n        <h1>TRAINER {localStorage.getItem(\"name\")}</h1>\n        {this.state.pokemon && (\n          <div className=\"trainer\">\n            <div className=\"trainerA\">\n              {this.state.pokemon.map(data => (\n                <div>\n                  <img\n                    className=\"trainerPokemon\"\n                    src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                    onClick={() => this.showMoves(data)}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"moveContainer\">\n              {this.state.showPokemon && (\n                <div className=\"specificPokemonA\">\n                  <div className=\"specificPokemonB\">\n                    <span>\n                      <h4>{this.state.showPokemon.name}</h4>\n                      Level {this.state.showPokemon.level}\n                    </span>\n                    <img\n                      className=\"specificPokemon\"\n                      src={this.state.showPokemon.frontImage}\n                    />\n                    <div className=\"pokemonDetails\">\n                      <div>Type: {this.state.showPokemon.type}</div>\n                      <div>\n                        HP {this.state.showPokemon.current_health} /\n                        {this.state.showPokemon.health}\n                      </div>\n                      <div>\n                        XP {this.state.showPokemon.current_experience} /{\" \"}\n                        {this.state.showPokemon.total_experience}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div class=\"movesets\">\n                <h4>MOVES</h4>\n                {this.state.moves && (\n                  <div>\n                    {this.state.moves.map((data, index) => (\n                      <div key={index}>\n                        <div>\n                          {data.name}:{data.attack}\n                        </div>\n                        {this.state.moves.length > 4 && (\n                          <button onClick={e => this.delete(index, data)}>\n                            DEL\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              {this.state.isClicked && (\n                <button\n                  className=\"register\"\n                  onClick={() => this.isFree(this.state.showPokemon)}\n                >\n                  free\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Trainer);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getChampion } from \"../services/api_helper\";\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      champion: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const champion = await getChampion();\n    if (champion) {\n      this.props.saySomething(\n        `Here is the menu... Be the greatest trainer by defeating the Reigning Champion!`\n      );\n    } else {\n      this.props.saySomething(\n        \"Here is the menu... At this moment there is no Pokemon Champion in this league. You have to finish the League in order to be one.\"\n      );\n    }\n    this.setState({\n      champion\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <div className=\"champContainer\">\n          <img src=\"https://i.gifer.com/6x6G.gif\" />\n          {this.state.champion ? (\n            <>\n              <h4>{this.state.champion.username}</h4>\n              <div className=\"pokemonMaster\">POKEMON MASTER</div>\n            </>\n          ) : (\n            <>NO CHAMPION</>\n          )}\n        </div>\n        <Link className=\"menuButton\" to=\"/trainer\">\n          PROFILE\n        </Link>\n        <Link className=\"menuButton\" to=\"/forest\">\n          FOREST\n        </Link>\n        <Link className=\"menuButton\" to=\"/pokecenter\">\n          POKECENTER\n        </Link>\n        <Link className=\"menuButton\" to=\"/league\">\n          LEAGUE\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Route, withRoute } from \"react-router-dom\";\nimport { trainerPokemon, ownedPokemon } from \"../services/api_helper\";\n\nimport ChooseStarter from \"./ChooseStarter\";\nimport Trainer from \"./Trainer\";\nimport Menu from \"./Menu\";\n\nclass StartGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      name: null,\n      pokemons: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const pokemons = await ownedPokemon(localStorage.getItem(\"id\"));\n    // pokemons.data.pokemon;\n    if (pokemons.data.pokemon.length !== 0) {\n      this.setState({ pokemons });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.pokemons ? (\n          <Menu saySomething={e => this.props.saySomething(e)} />\n        ) : (\n          <ChooseStarter saySomething={e => this.props.saySomething(e)} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default StartGame;\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nclass Outcomes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>CONGRATULATIONS {localStorage.getItem(\"name\")}</h1>\n        <p>\n          You are the new <h2>CHAMPION</h2>\n        </p>\n        {this.props.pokemon &&\n          this.props.pokemon.map(data => (\n            <span>\n              <img src={data.frontImage} />\n            </span>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Outcomes);\n","import React, { Component } from \"react\";\nimport {\n  getPokemon,\n  trainerPokemon,\n  getMoves,\n  update,\n  addMoves,\n  removeMove,\n  getChampion,\n  ownedPokemon,\n  newChampion,\n  typeAdvantage,\n  useAdvantage\n} from \"../services/api_helper\";\n\nimport MaxHealthBar from \"./maxHealthBar\";\nimport Outcome from \"./Outcome\";\n\nclass League extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentNpc: {\n        name: null,\n        image: null,\n        message: null\n      },\n      userWin: false,\n      user: null,\n      userHealed: null,\n      userPokemon: null,\n      userMoves: null,\n      npc: null,\n      npcPokemon: null,\n      npcMoves: null,\n      userAnimation: null,\n      npcAnimation: null,\n      userTurn: false,\n      npcTurn: false,\n      isStart: false,\n      isChamp: false,\n      battle: false,\n      rip:\n        \"https://b7.pngbarn.com/png/250/103/headstone-grave-cemetery-rest-in-peace-grave-s-png-clip-art-thumbnail.png\",\n      formData: {\n        current_health: null\n      },\n      gymLeader: [\n        {\n          name: \"Brock\",\n          message: \"Good job trainer\",\n          image:\n            \"https://em.wattpad.com/65355e3409b8e29cdf2256fe160ea59cd3787abc/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f776174747061642d6d656469612d736572766963652f53746f7279496d6167652f6b4945516f5a373041744f5034413d3d2d3335323236323731302e313439346530303531623832313934383639373839303938313438352e706e67?s=fit&w=720&h=720\",\n          array: [74, 95],\n          pokemon: []\n        },\n        {\n          name: \"Misty\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f6/Lets_Go_Pikachu_Eevee_Misty.png/183px-Lets_Go_Pikachu_Eevee_Misty.png\",\n          array: [120, 121],\n          pokemon: []\n        },\n        {\n          name: \"Lt. Surge\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/b/bc/Lets_Go_Pikachu_Eevee_Lt_Surge.png/216px-Lets_Go_Pikachu_Eevee_Lt_Surge.png\",\n          array: [100, 25, 26],\n          pokemon: []\n        },\n        {\n          name: \"Erika\",\n          message: \"Good job trainer\",\n          image:\n            \"https://projectpokemon.org/home/uploads/monthly_2019_06/large.celadon-city-char-erika.png.723ad4918835af3cb562f78c11a971db.png\",\n          array: [114, 70, 71],\n          pokemon: []\n        },\n        {\n          name: \"Koga\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f4/Lets_Go_Pikachu_Eevee_Koga.png/225px-Lets_Go_Pikachu_Eevee_Koga.png\",\n          array: [109, 89, 109, 110],\n          pokemon: []\n        },\n        {\n          name: \"Sabrina\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/7/78/Lets_Go_Pikachu_Eevee_Sabrina.png/211px-Lets_Go_Pikachu_Eevee_Sabrina.png\",\n          array: [64, 122, 49, 65],\n          pokemon: []\n        },\n        {\n          name: \"Blaine\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/c/c8/Lets_Go_Pikachu_Eevee_Blaine.png/216px-Lets_Go_Pikachu_Eevee_Blaine.png\",\n          array: [38, 78, 59, 126],\n          pokemon: []\n        },\n        {\n          name: \"Giovanni\",\n          message: \"Good job trainer\",\n          image:\n            \"https://gamepedia.cursecdn.com/wiki_marriland/f/f2/Giovanni.png\",\n          array: [53, 111, 112, 115, 31],\n          pokemon: []\n        }\n      ],\n      eliteFour: [\n        {\n          name: \"Lorelei\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/f/f7/Lets_Go_Pikachu_Eevee_Lorelei.png/162px-Lets_Go_Pikachu_Eevee_Lorelei.png\",\n          array: [87, 124, 91, 80, 131],\n          pokemon: []\n        },\n        {\n          name: \"Bruno\",\n          message: \"Good job trainer\",\n          image:\n            \"https://cdn.bulbagarden.net/upload/thumb/4/4c/Lets_Go_Pikachu_Eevee_Bruno.png/200px-Lets_Go_Pikachu_Eevee_Bruno.png\",\n          array: [95, 106, 95, 107, 68],\n          pokemon: []\n        },\n        {\n          name: \"Agatha\",\n          message: \"Good job trainer\",\n          image:\n            \"https://vignette.wikia.nocookie.net/pokemon/images/c/c9/Agatha_Lets_Go_Pikachu_Eevee.png/revision/latest?cb=20181120184616\",\n          array: [93, 42, 93, 24, 94],\n          pokemon: []\n        },\n        {\n          name: \"Lance\",\n          message: \"Good job trainer\",\n          image:\n            \"https://vignette.wikia.nocookie.net/vsbattles/images/f/f5/HeartGold_SoulSilver_Lance.png/revision/latest/scale-to-width-down/340?cb=20161217185553\",\n          array: [130, 148, 142, 148, 149],\n          pokemon: []\n        }\n      ],\n      champion: {\n        id: null,\n        name: null,\n        message: \"Well done trainer\",\n        pokemon: null\n      }\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(localStorage.getItem(\"id\"));\n    const gymLeader = this.state.gymLeader;\n    const eliteFour = this.state.eliteFour;\n    let gymLeaderCopy = JSON.parse(JSON.stringify(gymLeader));\n    let eliteFourCopy = JSON.parse(JSON.stringify(eliteFour));\n    this.props.saySomething(\n      \"Challenge the Pokemon Master by defeating all the Gym Leaders and Elite Four!\"\n    );\n\n    for (let i = 0; i < gymLeader.length; i++) {\n      for (let j = 0; j < gymLeader[i].array.length; j++) {\n        const id = gymLeader[i].array[j];\n        gymLeaderCopy[i].pokemon.push(await getPokemon(id));\n      }\n      this.setState({\n        gymLeader: gymLeaderCopy\n      });\n    }\n\n    for (let i = 0; i < eliteFour.length; i++) {\n      for (let j = 0; j < eliteFour[i].array.length; j++) {\n        const id = eliteFour[i].array[j];\n        eliteFourCopy[i].pokemon.push(await getPokemon(id));\n      }\n      this.setState({\n        eliteFour: eliteFourCopy\n      });\n    }\n    const user = await trainerPokemon();\n    const userHealed = user;\n    const userPokemon = user[0];\n    const userMoves = await getMoves(userPokemon.id);\n    this.setState({ user, userHealed, userPokemon, userMoves, heal: 5 });\n\n    const champion = await getChampion();\n    console.log(champion);\n    if (champion) {\n      const idChamp = champion.id;\n      const resp = await ownedPokemon(idChamp);\n      const pokemon = resp.data.pokemon;\n      const name = champion.username;\n      this.setState({\n        champion: { ...this.state.champion, id: idChamp, name, pokemon }\n      });\n    }\n  };\n\n  newNpc = async enemy => {\n    const user = this.state.userHealed;\n    const userPokemon = this.state.userPokemon;\n    const userMoves = await getMoves(userPokemon.id);\n    this.setState({ user, userMoves });\n    const npcContainer = enemy.shift();\n    const npc = npcContainer.pokemon;\n    const name = npcContainer.name;\n    const image = npcContainer.image;\n    const message = npcContainer.message;\n\n    const npcPokemon = npc.shift();\n    console.log(npcPokemon.id);\n    const npcMoves = await getMoves(npcPokemon.id);\n\n    this.setState({\n      currentNpc: {\n        name,\n        image,\n        message\n      },\n      npc,\n      npcPokemon,\n      npcMoves,\n      isStart: true,\n      userWin: false\n    });\n  };\n\n  finalMatch = async enemy => {\n    // console.log(enemy);\n    // const npcContainer = enemy.shift();\n    const npc = this.state.champion.pokemon;\n    // const name = npcContainer.name;\n    // const image = npcContainer.image;\n    // const message = npcContainer.message;\n\n    const npcPokemon = npc.shift();\n    const npcMoves = await getMoves(npcPokemon.id);\n    this.setState({\n      // currentNpc: {\n      //   name,\n      //   image,\n      //   message\n      // },\n      npc,\n      npcPokemon,\n      npcMoves,\n      isStart: true,\n      userWin: false\n    });\n  };\n\n  battleStart = async () => {\n    const gymLeader = this.state.gymLeader;\n    const eliteFour = this.state.eliteFour;\n    let enemy = null;\n    let champ = null;\n\n    if (gymLeader.length !== 0) {\n      enemy = gymLeader;\n      this.newNpc(enemy);\n    } else if (gymLeader.length === 0 && eliteFour.length !== 0) {\n      enemy = eliteFour;\n      this.newNpc(enemy);\n    } else if (gymLeader.length === 0 && eliteFour.length === 0) {\n      champ = await getChampion();\n      if (\n        this.state.champion.pokemon &&\n        this.state.champion.pokemon.length !== 0\n      ) {\n        // let pokemon = await ownedPokemon(champ.id);\n        // enemy = pokemon.data.pokemon;\n        this.props.saySomething(\n          `Behold the Pokemon Champion ${champ.username}! Is here!`\n        );\n        this.finalMatch();\n      } else {\n        const postData = {\n          rank: \"champion\"\n        };\n\n        const id = localStorage.getItem(\"id\");\n        const resp = await newChampion(id, postData);\n        if (this.state.champion.id) {\n          const formerChamp = {\n            rank: \"undefined\"\n          };\n          const resp1 = await newChampion(this.state.champion.id, formerChamp);\n        }\n        this.setState({ isChamp: true });\n        this.props.saySomething(\"YOU ARE THE NEW CHAMPION!\");\n      }\n    }\n  };\n\n  evolution = async () => {\n    let type = this.state.userPokemon.type;\n    let userHealth = this.state.userPokemon.current_health;\n    let fullyEvolved = this.state.userPokemon.fullyEvolved;\n    let id = this.state.userPokemon.id;\n    let total_experience = this.state.userPokemon.total_experience;\n    let current_experience = this.state.userPokemon.current_experience;\n    let level = this.state.userPokemon.level;\n    let health = this.state.userPokemon.health;\n    let frontImage = this.state.userPokemon.frontImage;\n    let backImage = this.state.userPokemon.backImage;\n    let num = frontImage.match(/\\d+/g).map(Number);\n\n    current_experience = current_experience + (total_experience * 1.5) / level;\n\n    if (level < 100) {\n      if (current_experience >= total_experience) {\n        level++;\n        health += 2;\n        current_experience = current_experience - total_experience;\n        if (current_experience < 0) current_experience = 0;\n        if (level === 15 && fullyEvolved === false) {\n          num++;\n          frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n          backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n          let resp = await getMoves(num);\n          let del = await getMoves(id);\n          for (let i = 0; i < del.length; i++) {\n            await removeMove(id, del[i].id);\n          }\n          for (let i = 0; i < resp.length; i++) {\n            this.newMoves(resp[i], id);\n          }\n        } else if (level === 30 && fullyEvolved === false) {\n          num++;\n          frontImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${num}.png`;\n          backImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon//back/${num}.png`;\n          fullyEvolved = true;\n          let resp = await getMoves(num);\n          let del = await getMoves(id);\n          for (let i = 0; i < del.length; i++) {\n            await removeMove(id, del[i].id);\n          }\n          for (let i = 0; i < resp.length; i++) {\n            this.newMoves(resp[i], id);\n          }\n        }\n      }\n    }\n    const passData = {\n      health,\n      current_health: userHealth,\n      level,\n      current_experience,\n      frontImage,\n      backImage,\n      type\n    };\n    const resp = await update(id, passData);\n  };\n\n  //*************************************************** */\n\n  randomFunc(random) {\n    let response = random[Math.floor(Math.random() * random.length)];\n    return response;\n  }\n\n  newMoves = async (moves, id) => {\n    let postMoveCopy = {\n      name: moves.name,\n      attack: moves.attack,\n      animation: moves.animation,\n      type: moves.type\n    };\n\n    let resp = await addMoves(id, postMoveCopy);\n  };\n\n  battleSequence = async () => {\n    this.setState({ battle: true });\n    let typeUser = this.state.userPokemon.type;\n    let typeNpc = this.state.npcPokemon.type;\n    let levelUser = this.state.userPokemon.level;\n    let levelNpc = this.state.npcPokemon.level;\n    let formData = this.state.formData;\n    let id = this.state.userPokemon.id;\n    let npcHealth = this.state.npcPokemon.current_health;\n    let halfHp = this.state.npcPokemon.health / 2;\n    let randomNpcAttack = this.randomFunc(\n      useAdvantage(this.state.npcMoves, typeUser)\n    );\n    console.log(this.state.npcMoves);\n    let npcAdvantage = typeAdvantage(randomNpcAttack.type, typeUser);\n    let npcAttack =\n      Math.floor(\n        randomNpcAttack.attack + randomNpcAttack.attack * levelNpc * 0.1\n      ) * npcAdvantage;\n    let npcAnimation = randomNpcAttack.animation;\n    console.log(randomNpcAttack.type);\n    let userHealth = this.state.userPokemon.current_health;\n    let randomUserAttack = this.randomFunc(\n      useAdvantage(this.state.userMoves, typeNpc)\n    );\n    let userAdvantage = typeAdvantage(randomUserAttack.type, typeNpc);\n    let userAttack =\n      Math.floor(\n        randomUserAttack.attack + randomUserAttack.attack * levelUser * 0.1\n      ) * userAdvantage;\n    let userAnimation = randomUserAttack.animation;\n\n    let effective = \"\";\n    if (userAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (userAdvantage === 0.5) effective = \"not effective\";\n\n    this.setState({ userAnimation, userTurn: true });\n    this.props.saySomething(\n      `${this.state.userPokemon.name} uses ${randomUserAttack.name}! ${effective} deals ${userAttack}!`\n    );\n    effective = \"\";\n    if (npcAdvantage === 2) effective = \"SUPER EFFECTIVE\";\n    else if (npcAdvantage === 0.5) effective = \"not effective\";\n    setTimeout(\n      function() {\n        this.setState({ userAnimation: null, userTurn: false });\n      }.bind(this),\n      1000\n    );\n\n    setTimeout(\n      function() {\n        if (this.state.npcPokemon) {\n          this.setState({ npcAnimation, npcTurn: true });\n          this.props.saySomething(\n            `${this.state.npcPokemon.name} uses ${randomNpcAttack.name}! ${effective} deals ${npcAttack}!`\n          );\n        }\n      }.bind(this),\n      1000\n    );\n    setTimeout(\n      function() {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2000\n    );\n\n    npcHealth = npcHealth - userAttack;\n    userHealth = userHealth - npcAttack;\n\n    if (formData.current_health !== userHealth) {\n      this.setState({\n        formData: {\n          current_health: userHealth\n        }\n      });\n    }\n    // if (npcHealth <= 0 && userHealth <= 0) {\n    //   setTimeout(\n    //     function() {\n    //       this.setState({\n    //         npcPokemon: { ...this.state.npcPokemon, current_health: 0 },\n    //         userPokemon: { ...this.state.userPokemon, current_health: 0 },\n    //         formData: { ...this.state.formData, current_health: userHealth }\n    //       });\n    //     }.bind(this),\n    //     2000\n    //   );\n    // }\n    if (npcHealth < 0 || npcHealth === 0) {\n      if (this.state.npc.length !== 0) {\n        let index = null;\n        const npc = this.state.npc;\n        const npcPokemon = npc.pop(0);\n        const passData = {\n          current_health: 0\n        };\n        this.setState({\n          npcPokemon,\n          npc,\n          formData: { ...this.state.formData, current_health: userHealth },\n          battle: false\n        });\n\n        const resp = await update(id, passData);\n        console.log(this.state.npc.length);\n      } else {\n        this.setState({ userWin: true, npcPokemon: null, battle: false });\n      }\n      this.evolution();\n    } else if (userHealth < 0 || userHealth === 0) {\n      let index = null;\n      const user = this.state.user;\n      let userPokemon = this.state.userPokemon;\n      for (let i = 0; i < user.length; i++) {\n        if (user[i].id === this.state.userPokemon.id) {\n          index = i;\n        }\n      }\n      user.splice(index, 1);\n      const passData = {\n        current_health: 0\n      };\n      if (this.state.user.length === 0) {\n        setTimeout(\n          function() {\n            this.props.saySomething(\n              \"YOU LOST... Go head to Pokecenter and heal those poor pokemons then try again\"\n            );\n            this.setState({ battle: true });\n          }.bind(this),\n          3000\n        );\n        const resp = await update(this.state.userPokemon.id, passData);\n      } else {\n        userPokemon = user[0];\n      }\n      setTimeout(\n        function() {\n          this.setState({\n            user,\n            userPokemon,\n            formData: { ...this.state.formData, current_health: 0 },\n            win: true,\n            battle: false\n          });\n        }.bind(this),\n        2500\n      );\n    } else {\n      const passData = {\n        current_health: userHealth\n      };\n      setTimeout(\n        function() {\n          this.setState({\n            userPokemon: {\n              ...this.state.userPokemon,\n              current_health: userHealth\n            },\n            formData: { ...this.state.formData, current_health: userHealth },\n            npcPokemon: { ...this.state.npcPokemon, current_health: npcHealth },\n            battle: false\n          });\n        }.bind(this),\n        2500\n      );\n      const resp = await update(id, passData);\n    }\n  };\n\n  change = async pokemon => {\n    const fighterPokemonID = this.state.userPokemon.id;\n    const formData = this.state.formData;\n    const id = pokemon.id;\n    let randomNpcAttack = this.randomFunc(this.state.npcMoves);\n    let npcAttack = randomNpcAttack.attack;\n    let npcAnimation = randomNpcAttack.animation;\n    setTimeout(\n      function() {\n        this.setState({ npcAnimation, npcTurn: true });\n      }.bind(this),\n      1000\n    );\n    setTimeout(\n      function() {\n        this.setState({ npcAnimation: null, npcTurn: false });\n      }.bind(this),\n      2000\n    );\n\n    const changedPokemon = await getPokemon(id);\n    this.props.saySomething(\n      `Trainer ${localStorage.getItem(\"name\")} switches ${\n        this.state.userPokemon.name\n      } with ${changedPokemon.name}`\n    );\n    let userHealth = changedPokemon.current_health;\n    userHealth = userHealth - npcAttack;\n    const passData = {\n      current_health: userHealth\n    };\n    const resp = await update(id, passData);\n    const userPokemon = await getPokemon(id);\n\n    const resp1 = await update(fighterPokemonID, formData);\n\n    const userMoves = await getMoves(id);\n    setTimeout(\n      function() {\n        this.setState({\n          userPokemon,\n          userMoves,\n          formData: {\n            current_health: userHealth\n          },\n          battle: false\n        });\n      }.bind(this),\n      2500\n    );\n  };\n\n  firstPokemon = id => {\n    console.log(id);\n    const user = this.state.user;\n    const userPokemon = user[id];\n    console.log(userPokemon);\n    this.props.saySomething(`${userPokemon.name} is now your first pokemon!`);\n    this.setState({ userPokemon });\n  };\n\n  render() {\n    return (\n      <div className=\"league\">\n        {!this.state.isStart && (\n          <div>\n            <h4>GYM LEADER</h4>\n            <div className=\"gym\">\n              {this.state.gymLeader &&\n                this.state.gymLeader.map(data => (\n                  <img className=\"leader\" src={data.image} />\n                ))}\n            </div>\n\n            <h4>ELITE FOUR</h4>\n            <div className=\"elite\">\n              {this.state.eliteFour &&\n                this.state.eliteFour.map(data => (\n                  <img className=\"four\" src={data.image} />\n                ))}\n            </div>\n            <button className=\"register\" onClick={() => this.battleStart()}>\n              START\n            </button>\n          </div>\n        )}\n\n        {this.state.isChamp ? (\n          <>\n            <Outcome\n              result={this.state.userWin}\n              pokemon={this.state.user}\n              champ={this.state.champion}\n            />\n          </>\n        ) : (\n          <>\n            {this.state.userWin && (\n              <>\n                <div className=\"currentLeader\">\n                  <h4>Gym Leader {this.state.currentNpc.name}</h4>\n                  <img\n                    className=\"currentLeaderImage\"\n                    src={this.state.currentNpc.image}\n                  />\n                  <p>\n                    \"{this.state.currentNpc.message}\" -{\" \"}\n                    {this.state.currentNpc.name}\n                  </p>\n                </div>\n                <div>\n                  <img\n                    className=\"pokemon\"\n                    src={this.state.userPokemon.frontImage}\n                  />\n                </div>\n                <div>\n                  {this.state.user.map((pokemon, index) => (\n                    <img\n                      onClick={() => this.firstPokemon(index)}\n                      src={pokemon.frontImage}\n                    />\n                  ))}\n                </div>\n\n                <button className=\"register\" onClick={() => this.battleStart()}>\n                  PROCEED\n                </button>\n              </>\n            )}\n          </>\n        )}\n\n        {this.state.npcPokemon && (\n          <div className=\"npc\">\n            <div>\n              {this.state.userAnimation && (\n                <img className=\"userFX\" src={this.state.userAnimation} />\n              )}\n\n              <div>\n                <div className=\"npcA\">\n                  <div className=\"npcB\">\n                    <span>{this.state.npcPokemon.name}</span>\n                    <div className=\"hpBar\">\n                      <MaxHealthBar\n                        percentage={this.state.npcPokemon.current_health}\n                      />\n                      {this.state.npc.map((data, index) => (\n                        <div key={index}>\n                          <img\n                            onClick={() => this.change(data)}\n                            src=\"https://i.ya-webdesign.com/images/pokeball-pixel-png-2.png\"\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  <div>\n                    {console.log(this.state.npcMoves)}\n                    {this.state.npcPokemon.current_health ? (\n                      <img\n                        className={\n                          this.state.npcTurn ? \"npcMove\" : \"npcPokemon\"\n                        }\n                        src={this.state.npcPokemon.frontImage}\n                      />\n                    ) : (\n                      <img className=\"npcPokemon\" src={this.state.rip} />\n                    )}\n                  </div>\n                </div>\n                {!this.state.battle && (\n                  <button\n                    className=\"register1\"\n                    onClick={() => this.battleSequence()}\n                  >\n                    FIGHT\n                  </button>\n                )}\n                <div>\n                  <div className=\"userA\">\n                    <div>\n                      {this.state.npcAnimation && (\n                        <img className=\"npcFX\" src={this.state.npcAnimation} />\n                      )}\n\n                      {this.state.user.length !== 0 ? (\n                        <img\n                          className={\n                            this.state.userTurn ? \"userMove\" : \"userPokemon\"\n                          }\n                          src={this.state.userPokemon.backImage}\n                        />\n                      ) : (\n                        <img\n                          className=\"userPokemonFade\"\n                          src={this.state.userPokemon.backImage}\n                        />\n                      )}\n                    </div>\n                    {this.state.userPokemon && (\n                      <div className=\"userB\">\n                        <span>{this.state.userPokemon.name}</span>\n                        {console.log(this.state.gymLeader.length)}\n                        <div className=\"hpBar\">\n                          <MaxHealthBar\n                            percentage={this.state.userPokemon.current_health}\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"sparePokemons\">\n                  {this.state.user.map((data, index) => (\n                    <div key={index}>\n                      <img\n                        onClick={() => this.change(data)}\n                        src={this.state.user[index].frontImage}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default League;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport {\n  loginUser,\n  getAllPokemon,\n  userData,\n  verifyUser,\n  registerUser\n} from \"./services/api_helper\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport { IoMdLogOut } from \"react-icons/fa\";\n\nimport Forest from \"./components/Forest\";\nimport Pokedex from \"./components/Pokedex\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport StartGame from \"./components/StartGame\";\nimport Trainer from \"./components/Trainer\";\nimport Pokecenter from \"./components/Pokecenter\";\nimport League from \"./components/League\";\nimport Menu from \"./components/Menu\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trainername: null,\n      id: null,\n      currentUser: null,\n      formData: {\n        username: null,\n        password: null\n      },\n      pokemons: null,\n      isClicked: false,\n      instruction: null\n    };\n  }\n\n  componentDidMount = async () => {\n    verifyUser();\n    console.log(this.state.currentUser);\n    if (localStorage.getItem(\"authToken\")) {\n      const username = localStorage.getItem(\"username\");\n      const user = { username };\n      const id = localStorage.getItem(\"id\");\n      user &&\n        this.setState({\n          currentUser: user,\n          id\n        });\n    }\n  };\n\n  // checkMoves = async id => {\n  //   id++;\n  //   const resp = await axios.get(`http://localhost:3001/pokemons/${id}/moves`);\n  //   const moves = resp.data.moves;\n  //   this.setState({ moves });\n  //   console.log(this.state.moves);\n  // };\n\n  handleRegister = async (e, registerData) => {\n    e.preventDefault();\n    console.log(registerData);\n    const regData = await registerUser(registerData);\n    // const trainername = regData.username;\n    console.log(regData);\n    // const password = regData.password;\n    // const formData = this.state.regData;\n    // const id = this.state.id;\n    // this.reloadReg(trainername, password);\n    const currentUser = regData;\n    console.log(currentUser);\n    this.setState({\n      currentUser,\n      trainername: currentUser.username\n    });\n\n    this.props.history.push(\"/start\");\n  };\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    const id = currentUser.id;\n    const trainername = currentUser.username;\n    this.setState({ currentUser, trainername, id });\n    this.props.history.push(\"/start\");\n  };\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null\n    });\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"id\");\n    this.props.history.push(\"/\");\n  };\n\n  handleMenu = () => {\n    this.props.history.push(\"/menu\");\n  };\n\n  turnOn = () => {\n    this.setState({ isClicked: true });\n  };\n\n  saySomething = instruction => {\n    this.setState({ instruction });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {!this.state.currentUser && (\n            <div className=\"opening\">\n              <h2>POKEMON LEAGUE</h2>\n              <div className=\"buttonsOpenning\">\n                <Link className=\"register\" to=\"/users/register\">\n                  REGISTER\n                </Link>\n                <Route\n                  path=\"/users/register\"\n                  render={() => (\n                    <RegisterForm\n                      handleRegister={this.handleRegister}\n                      isClicked={this.state.isClicked}\n                    />\n                  )}\n                />\n                <Link className=\"register\" to=\"/users/login\">\n                  LOGIN\n                </Link>\n                <Route\n                  path=\"/users/login\"\n                  render={() => (\n                    <LoginForm\n                      isClicked={this.state.isClicked}\n                      handleLogin={this.handleLogin}\n                    />\n                  )}\n                />\n              </div>\n            </div>\n          )}\n          {this.state.currentUser && (\n            <div className=\"header\">\n              <img\n                className=\"home\"\n                src=\"https://www.nicepng.com/png/detail/15-158271_pokeball-icon.png\"\n                onClick={() => this.handleMenu()}\n              />\n              <p className=\"title\">POKEMON LEAGUE</p>\n              <img\n                className=\"logout\"\n                src=\"https://cdn2.iconfinder.com/data/icons/e-commerce-line-10-1/1024/logout10-512.png\"\n                onClick={() => this.handleLogout()}\n              />\n            </div>\n          )}\n        </div>\n\n        <div className=\"main\">\n          <Route\n            path=\"/league\"\n            render={() => <League saySomething={e => this.saySomething(e)} />}\n          />\n          <Route\n            path=\"/forest\"\n            render={() => <Forest saySomething={e => this.saySomething(e)} />}\n          />\n          <Route\n            path=\"/start\"\n            render={() => (\n              <StartGame\n                saySomething={e => this.saySomething(e)}\n                instruction={this.state.instruction}\n              />\n            )}\n          />\n          <Route\n            path=\"/menu\"\n            render={() => <Menu saySomething={e => this.saySomething(e)} />}\n          />\n          <Route path=\"/pokemons/pokedex\" render={() => <Pokedex />} />\n          <Route\n            path=\"/trainer\"\n            render={() => (\n              <Trainer\n                trainername={this.state.trainername}\n                saySomething={e => this.saySomething(e)}\n              />\n            )}\n          />\n          <Route path=\"/pokecenter\" render={() => <Pokecenter />} />\n        </div>\n        <>\n          {this.state.currentUser && (\n            <>\n              {this.state.instruction && (\n                <div className=\"footer\">\n                  <p>{this.state.instruction}</p>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}